/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/tender/create";
exports.ids = ["pages/tender/create"];
exports.modules = {

/***/ "(pages-dir-node)/./abi/TenderChain.json":
/*!******************************!*\
  !*** ./abi/TenderChain.json ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"TenderChain","sourceName":"contracts/TenderChain.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TenderCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"bidder","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TenderCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"string","name":"title","type":"string"},{"indexed":false,"internalType":"uint256","name":"budget","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"uint256","name":"expiresAt","type":"uint256"}],"name":"TenderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"bidder","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TenderTaken","type":"event"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"cancelTender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"completeTender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_title","type":"string"},{"internalType":"string","name":"_description","type":"string"},{"internalType":"uint256","name":"_budget","type":"uint256"},{"internalType":"uint256","name":"_deadline","type":"uint256"},{"internalType":"uint256","name":"_distance","type":"uint256"},{"internalType":"uint256","name":"_weight","type":"uint256"},{"internalType":"string","name":"_cargoType","type":"string"},{"internalType":"uint256","name":"_urgencyDays","type":"uint256"},{"internalType":"uint256","name":"_expirationMinutes","type":"uint256"}],"name":"createTender","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getActiveTenders","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"getTender","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"budget","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"distance","type":"uint256"},{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"string","name":"cargoType","type":"string"},{"internalType":"uint256","name":"urgencyDays","type":"uint256"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"address","name":"bidder","type":"address"},{"internalType":"enum TenderChain.TenderStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"expiresAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"takeTender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tenderCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tenders","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"budget","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"distance","type":"uint256"},{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"string","name":"cargoType","type":"string"},{"internalType":"uint256","name":"urgencyDays","type":"uint256"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"address","name":"bidder","type":"address"},{"internalType":"enum TenderChain.TenderStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"expiresAt","type":"uint256"}],"stateMutability":"view","type":"function"}],"bytecode":"0x60808060405234610016576110e8908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630585c25e14610d655780631f05877614610d475780632ac6c78514610ba45780633a74e07014610a8b578063465e1def146109e857806357577b83146108cd578063659abb55146107605763666b5f371461007457600080fd5b3461075b5761012036600319011261075b5760043567ffffffffffffffff811161075b576100a6903690600401610ff0565b60243567ffffffffffffffff811161075b576100c6903690600401610ff0565b9060c43567ffffffffffffffff811161075b576100e7903690600401610ff0565b90610104359080511561072257604435156106dd57426064351115610698576001549261011384611047565b600155603c830292808404603c149015171561068257824201421161068257604051946101c0860186811067ffffffffffffffff8211176104cc5760405284865282602087015260408601526044356060860152606435608086015260843560a086015260a43560c086015260e085015260e4356101008501523361012085015260006101408501526000610160850152426101808501528142016101a0850152826000526000602052604060002084518155602085015180519067ffffffffffffffff82116104cc5781906101ec6001850154610eee565b601f811161062f575b50602090601f83116001146105bd576000926105b2575b50508160011b916000199060031b1c19161760018201555b604085015180519067ffffffffffffffff82116104cc57819061024a6002850154610eee565b601f811161055f575b50602090601f83116001146104ed576000926104e2575b50508160011b916000199060031b1c19161760028201555b606085015160038201556080850151600482015560a0850151600582015560c0850151600682015560e085015180519067ffffffffffffffff82116104cc5781906102d06007850154610eee565b601f8111610479575b50602090601f831160011461040c57600092610401575b50508160011b916000199060031b1c19161760078201555b61010085015160088201556101208501516009820180546001600160a01b0319166001600160a01b03928316179055610140860151600a830180546101608901519195909490939092169060058110156103eb5760209888967f3dbf6374bde9016468d4624c62c547cf43ae524b88d2ea7e255480407db3758c96600c946101a09460ff60a01b9060a01b16916affffffffffffffffffffff60a81b1617179055610180810151600b85015501519101556103ce60405191606083526060830190610e13565b9360443587830152420160408201528033940390a3604051908152f35b634e487b7160e01b600052602160045260246000fd5b0151905038806102f0565b600785016000908152602081209350601f198516905b8181106104615750908460019594939210610448575b505050811b016007820155610308565b015160001960f88460031b161c19169055388080610438565b92936020600181928786015181550195019301610422565b909150600784016000526020600020601f840160051c8101602085106104c5575b90849392915b601f830160051c820181106104b65750506102d9565b600081558594506001016104a0565b508061049a565b634e487b7160e01b600052604160045260246000fd5b01519050388061026a565b9250600284016000526020600020906000935b601f1984168510610544576001945083601f1981161061052b575b505050811b016002820155610282565b015160001960f88460031b161c1916905538808061051b565b81810151835560209485019460019093019290910190610500565b909150600284016000526020600020601f840160051c8101602085106105ab575b90849392915b601f830160051c8201811061059c575050610253565b60008155859450600101610586565b5080610580565b01519050388061020c565b9250600184016000526020600020906000935b601f1984168510610614576001945083601f198116106105fb575b505050811b016001820155610224565b015160001960f88460031b161c191690553880806105eb565b818101518355602094850194600190930192909101906105d0565b909150600184016000526020600020601f840160051c81016020851061067b575b90849392915b601f830160051c8201811061066c5750506101f5565b60008155859450600101610656565b5080610650565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601e60248201527f446561646c696e65206d75737420626520696e207468652066757475726500006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f427564676574206d7573742062652067726561746572207468616e20300000006044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270151a5d1b19481a5cc81c995c5d5a5c9959607a1b6044820152606490fd5b600080fd5b3461075b5760208060031936011261075b5760043560008181528083526040902060098101546001600160a01b031661079a811515611056565b331461088857600a81019081549060ff8260a01c1660058110156103eb5761084e57600c0154421015610814576001600160a81b0319163360ff60a01b19811691909117600160a11b1790915560405142815290927f2d219e8fc54d0eaeb33a8ba01ccc277da4ac9011e9dd7e7b4a80a0258edc0a9b91a3005b60405162461bcd60e51b815260048101859052601260248201527115195b99195c881a185cc8195e1c1a5c995960721b6044820152606490fd5b60405162461bcd60e51b81526004810186905260126024820152712a32b73232b91034b9903737ba1037b832b760711b6044820152606490fd5b60405162461bcd60e51b815260048101849052601b60248201527f43616e6e6f742074616b6520796f7572206f776e2074656e64657200000000006044820152606490fd5b3461075b57602036600319011261075b576004356000818152602081905260409020600a018054336001600160a01b038216036109995760ff8160a01c1660058110156103eb5760020361095b5760ff60a01b1916600360a01b1790556040514281523391907fc17b163892115f1fb664bffa8733edbcb472908a5b8a8858085c2687729b982a90602090a3005b60405162461bcd60e51b815260206004820152601660248201527515195b99195c881b5d5cdd08189948185dd85c99195960521b6044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f4f6e6c792061737369676e6564206269646465722063616e20636f6d706c65746044820152606560f81b6064820152608490fd5b3461075b57602036600319011261075b57600435600052600060205260406000208054610a87610a1a60018401610f4a565b92610a2760028201610f4a565b90600381015460048201546005830154906006840154610a4960078601610f4a565b60088601549160018060a01b03948560098901541694600a89015497600c600b8b01549a01549a6040519e8f9e8f9a60ff8d60a01c169c169a610e53565b0390f35b3461075b57602036600319011261075b57600435600081815260208190526040902060098101546001600160a01b03163303610b5f57600a01805460ff8160a01c1660058110156103eb57610b1a5760ff60a01b1916600160a21b1790556040514281523391907f121260d8e5a90e25b8efcafc18268061d5e0ba4b7b58b6a9db4a60048e3582bb90602090a3005b60405162461bcd60e51b815260206004820152601c60248201527f43616e206f6e6c792063616e63656c206f70656e2074656e64657273000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f4f6e6c792063726561746f722063616e2063616e63656c0000000000000000006044820152606490fd5b3461075b57600036600319011261075b57600180546000805b828110610cdb575082610be8610bd28361109a565b92610be06040519485610f28565b80845261109a565b6020838101949091601f19013686376000805b828210610c3d5750505060405192818401908285525180915260408401949160005b828110610c2a5785870386f35b8351875295810195928101928401610c1d565b816000979597969496526000865260ff600a6040600020015460a01c16600590818110156103eb571580610cc2575b610c88575b5090610c7c90611047565b90959395949294610bfb565b8451821015610cac57818388610c7c94610ca6941b88010152611047565b90610c71565b634e487b7160e01b600052603260045260246000fd5b508260005260008752600c604060002001544210610c6c565b8060005260206000815260ff600a6040600020015460a01c1660058110156103eb57159081610d2e575b50610d19575b610d1490611047565b610bbd565b90610d26610d1491611047565b919050610d0b565b6000915082825252600c60406000200154421085610d05565b3461075b57600036600319011261075b576020600154604051908152f35b3461075b57602036600319011261075b576004356000526000602052604060002060018060a01b03610a878160098401541691610da3831515611056565b835492600385015494600481015492600582015492600683015492600881015490600a81015494600b82015496600c83015498610de260018501610f4a565b9c610dfb6007610df460028801610f4a565b9601610f4a565b946040519e8f9e8f9a60ff8d60a01c169c169a610e53565b919082519283825260005b848110610e3f575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610e1e565b9a97949192989e9d9c9998610e80610eb098959794610e8e938e528d6101c0908160208201520190610e13565b8c810360408e015290610e13565b9460608b015260808a015260a089015260c088015286820360e0880152610e13565b6101008501989098526001600160a01b039182166101208501521661014083015260058310156103eb576101a0926101608301526101808201520152565b90600182811c92168015610f1e575b6020831014610f0857565b634e487b7160e01b600052602260045260246000fd5b91607f1691610efd565b90601f8019910116810190811067ffffffffffffffff8211176104cc57604052565b9060405191826000825492610f5e84610eee565b908184526001948581169081600014610fcd5750600114610f8a575b5050610f8892500383610f28565b565b9093915060005260209081600020936000915b818310610fb5575050610f8893508201013880610f7a565b85548884018501529485019487945091830191610f9d565b915050610f8894506020925060ff191682840152151560051b8201013880610f7a565b81601f8201121561075b5780359067ffffffffffffffff82116104cc5760405192611025601f8401601f191660200185610f28565b8284526020838301011161075b57816000926020809301838601378301015290565b60001981146106825760010190565b1561105d57565b60405162461bcd60e51b815260206004820152601560248201527415195b99195c88191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b67ffffffffffffffff81116104cc5760051b6020019056fea264697066735822122032122b3ece22ffba9be8c5860bedcbc5384e2eb2b5372af268acdb52e59070c664736f6c63430008140033","deployedBytecode":"0x6080604052600436101561001257600080fd5b60003560e01c80630585c25e14610d655780631f05877614610d475780632ac6c78514610ba45780633a74e07014610a8b578063465e1def146109e857806357577b83146108cd578063659abb55146107605763666b5f371461007457600080fd5b3461075b5761012036600319011261075b5760043567ffffffffffffffff811161075b576100a6903690600401610ff0565b60243567ffffffffffffffff811161075b576100c6903690600401610ff0565b9060c43567ffffffffffffffff811161075b576100e7903690600401610ff0565b90610104359080511561072257604435156106dd57426064351115610698576001549261011384611047565b600155603c830292808404603c149015171561068257824201421161068257604051946101c0860186811067ffffffffffffffff8211176104cc5760405284865282602087015260408601526044356060860152606435608086015260843560a086015260a43560c086015260e085015260e4356101008501523361012085015260006101408501526000610160850152426101808501528142016101a0850152826000526000602052604060002084518155602085015180519067ffffffffffffffff82116104cc5781906101ec6001850154610eee565b601f811161062f575b50602090601f83116001146105bd576000926105b2575b50508160011b916000199060031b1c19161760018201555b604085015180519067ffffffffffffffff82116104cc57819061024a6002850154610eee565b601f811161055f575b50602090601f83116001146104ed576000926104e2575b50508160011b916000199060031b1c19161760028201555b606085015160038201556080850151600482015560a0850151600582015560c0850151600682015560e085015180519067ffffffffffffffff82116104cc5781906102d06007850154610eee565b601f8111610479575b50602090601f831160011461040c57600092610401575b50508160011b916000199060031b1c19161760078201555b61010085015160088201556101208501516009820180546001600160a01b0319166001600160a01b03928316179055610140860151600a830180546101608901519195909490939092169060058110156103eb5760209888967f3dbf6374bde9016468d4624c62c547cf43ae524b88d2ea7e255480407db3758c96600c946101a09460ff60a01b9060a01b16916affffffffffffffffffffff60a81b1617179055610180810151600b85015501519101556103ce60405191606083526060830190610e13565b9360443587830152420160408201528033940390a3604051908152f35b634e487b7160e01b600052602160045260246000fd5b0151905038806102f0565b600785016000908152602081209350601f198516905b8181106104615750908460019594939210610448575b505050811b016007820155610308565b015160001960f88460031b161c19169055388080610438565b92936020600181928786015181550195019301610422565b909150600784016000526020600020601f840160051c8101602085106104c5575b90849392915b601f830160051c820181106104b65750506102d9565b600081558594506001016104a0565b508061049a565b634e487b7160e01b600052604160045260246000fd5b01519050388061026a565b9250600284016000526020600020906000935b601f1984168510610544576001945083601f1981161061052b575b505050811b016002820155610282565b015160001960f88460031b161c1916905538808061051b565b81810151835560209485019460019093019290910190610500565b909150600284016000526020600020601f840160051c8101602085106105ab575b90849392915b601f830160051c8201811061059c575050610253565b60008155859450600101610586565b5080610580565b01519050388061020c565b9250600184016000526020600020906000935b601f1984168510610614576001945083601f198116106105fb575b505050811b016001820155610224565b015160001960f88460031b161c191690553880806105eb565b818101518355602094850194600190930192909101906105d0565b909150600184016000526020600020601f840160051c81016020851061067b575b90849392915b601f830160051c8201811061066c5750506101f5565b60008155859450600101610656565b5080610650565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601e60248201527f446561646c696e65206d75737420626520696e207468652066757475726500006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f427564676574206d7573742062652067726561746572207468616e20300000006044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270151a5d1b19481a5cc81c995c5d5a5c9959607a1b6044820152606490fd5b600080fd5b3461075b5760208060031936011261075b5760043560008181528083526040902060098101546001600160a01b031661079a811515611056565b331461088857600a81019081549060ff8260a01c1660058110156103eb5761084e57600c0154421015610814576001600160a81b0319163360ff60a01b19811691909117600160a11b1790915560405142815290927f2d219e8fc54d0eaeb33a8ba01ccc277da4ac9011e9dd7e7b4a80a0258edc0a9b91a3005b60405162461bcd60e51b815260048101859052601260248201527115195b99195c881a185cc8195e1c1a5c995960721b6044820152606490fd5b60405162461bcd60e51b81526004810186905260126024820152712a32b73232b91034b9903737ba1037b832b760711b6044820152606490fd5b60405162461bcd60e51b815260048101849052601b60248201527f43616e6e6f742074616b6520796f7572206f776e2074656e64657200000000006044820152606490fd5b3461075b57602036600319011261075b576004356000818152602081905260409020600a018054336001600160a01b038216036109995760ff8160a01c1660058110156103eb5760020361095b5760ff60a01b1916600360a01b1790556040514281523391907fc17b163892115f1fb664bffa8733edbcb472908a5b8a8858085c2687729b982a90602090a3005b60405162461bcd60e51b815260206004820152601660248201527515195b99195c881b5d5cdd08189948185dd85c99195960521b6044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f4f6e6c792061737369676e6564206269646465722063616e20636f6d706c65746044820152606560f81b6064820152608490fd5b3461075b57602036600319011261075b57600435600052600060205260406000208054610a87610a1a60018401610f4a565b92610a2760028201610f4a565b90600381015460048201546005830154906006840154610a4960078601610f4a565b60088601549160018060a01b03948560098901541694600a89015497600c600b8b01549a01549a6040519e8f9e8f9a60ff8d60a01c169c169a610e53565b0390f35b3461075b57602036600319011261075b57600435600081815260208190526040902060098101546001600160a01b03163303610b5f57600a01805460ff8160a01c1660058110156103eb57610b1a5760ff60a01b1916600160a21b1790556040514281523391907f121260d8e5a90e25b8efcafc18268061d5e0ba4b7b58b6a9db4a60048e3582bb90602090a3005b60405162461bcd60e51b815260206004820152601c60248201527f43616e206f6e6c792063616e63656c206f70656e2074656e64657273000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f4f6e6c792063726561746f722063616e2063616e63656c0000000000000000006044820152606490fd5b3461075b57600036600319011261075b57600180546000805b828110610cdb575082610be8610bd28361109a565b92610be06040519485610f28565b80845261109a565b6020838101949091601f19013686376000805b828210610c3d5750505060405192818401908285525180915260408401949160005b828110610c2a5785870386f35b8351875295810195928101928401610c1d565b816000979597969496526000865260ff600a6040600020015460a01c16600590818110156103eb571580610cc2575b610c88575b5090610c7c90611047565b90959395949294610bfb565b8451821015610cac57818388610c7c94610ca6941b88010152611047565b90610c71565b634e487b7160e01b600052603260045260246000fd5b508260005260008752600c604060002001544210610c6c565b8060005260206000815260ff600a6040600020015460a01c1660058110156103eb57159081610d2e575b50610d19575b610d1490611047565b610bbd565b90610d26610d1491611047565b919050610d0b565b6000915082825252600c60406000200154421085610d05565b3461075b57600036600319011261075b576020600154604051908152f35b3461075b57602036600319011261075b576004356000526000602052604060002060018060a01b03610a878160098401541691610da3831515611056565b835492600385015494600481015492600582015492600683015492600881015490600a81015494600b82015496600c83015498610de260018501610f4a565b9c610dfb6007610df460028801610f4a565b9601610f4a565b946040519e8f9e8f9a60ff8d60a01c169c169a610e53565b919082519283825260005b848110610e3f575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610e1e565b9a97949192989e9d9c9998610e80610eb098959794610e8e938e528d6101c0908160208201520190610e13565b8c810360408e015290610e13565b9460608b015260808a015260a089015260c088015286820360e0880152610e13565b6101008501989098526001600160a01b039182166101208501521661014083015260058310156103eb576101a0926101608301526101808201520152565b90600182811c92168015610f1e575b6020831014610f0857565b634e487b7160e01b600052602260045260246000fd5b91607f1691610efd565b90601f8019910116810190811067ffffffffffffffff8211176104cc57604052565b9060405191826000825492610f5e84610eee565b908184526001948581169081600014610fcd5750600114610f8a575b5050610f8892500383610f28565b565b9093915060005260209081600020936000915b818310610fb5575050610f8893508201013880610f7a565b85548884018501529485019487945091830191610f9d565b915050610f8894506020925060ff191682840152151560051b8201013880610f7a565b81601f8201121561075b5780359067ffffffffffffffff82116104cc5760405192611025601f8401601f191660200185610f28565b8284526020838301011161075b57816000926020809301838601378301015290565b60001981146106825760010190565b1561105d57565b60405162461bcd60e51b815260206004820152601560248201527415195b99195c88191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b67ffffffffffffffff81116104cc5760051b6020019056fea264697066735822122032122b3ece22ffba9be8c5860bedcbc5384e2eb2b5372af268acdb52e59070c664736f6c63430008140033","linkReferences":{},"deployedLinkReferences":{}}');

/***/ }),

/***/ "(pages-dir-node)/./components/Navbar.tsx":
/*!*******************************!*\
  !*** ./components/Navbar.tsx ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Navbar)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ \"(pages-dir-node)/./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hooks_useWeb3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useWeb3 */ \"(pages-dir-node)/./hooks/useWeb3.ts\");\n/* harmony import */ var _NetworkSelector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./NetworkSelector */ \"(pages-dir-node)/./components/NetworkSelector.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_hooks_useWeb3__WEBPACK_IMPORTED_MODULE_2__, _NetworkSelector__WEBPACK_IMPORTED_MODULE_3__]);\n([_hooks_useWeb3__WEBPACK_IMPORTED_MODULE_2__, _NetworkSelector__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nfunction Navbar() {\n    const { account, connectWallet, isConnecting } = (0,_hooks_useWeb3__WEBPACK_IMPORTED_MODULE_2__.useWeb3)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n        className: \"bg-white shadow-lg\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-between h-16\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex-shrink-0 flex items-center\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n                                    href: \"/\",\n                                    className: \"text-xl font-bold text-gray-800\",\n                                    children: \"TenderChain\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/Navbar.tsx\",\n                                    lineNumber: 14,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/Navbar.tsx\",\n                                lineNumber: 13,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"hidden sm:ml-6 sm:flex sm:space-x-8\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n                                        href: \"/\",\n                                        className: \"inline-flex items-center px-1 pt-1 text-sm font-medium text-gray-900 border-b-2 border-transparent hover:border-gray-300\",\n                                        children: \"Главная\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/Navbar.tsx\",\n                                        lineNumber: 19,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n                                        href: \"/dashboard\",\n                                        className: \"inline-flex items-center px-1 pt-1 text-sm font-medium text-gray-900 border-b-2 border-transparent hover:border-gray-300\",\n                                        children: \"Кабинет\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/Navbar.tsx\",\n                                        lineNumber: 25,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/Navbar.tsx\",\n                                lineNumber: 18,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/Navbar.tsx\",\n                        lineNumber: 12,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center space-x-3\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_NetworkSelector__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n                                fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/Navbar.tsx\",\n                                lineNumber: 34,\n                                columnNumber: 13\n                            }, this),\n                            account ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-sm font-medium text-gray-900 bg-gray-100 rounded-full px-4 py-2\",\n                                children: [\n                                    account.substring(0, 6),\n                                    \"...\",\n                                    account.substring(account.length - 4)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/Navbar.tsx\",\n                                lineNumber: 36,\n                                columnNumber: 15\n                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: connectWallet,\n                                disabled: isConnecting,\n                                className: \"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:bg-blue-300\",\n                                children: isConnecting ? \"Подключение...\" : \"Подключить кошелек\"\n                            }, void 0, false, {\n                                fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/Navbar.tsx\",\n                                lineNumber: 40,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/Navbar.tsx\",\n                        lineNumber: 33,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/Navbar.tsx\",\n                lineNumber: 11,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/Navbar.tsx\",\n            lineNumber: 10,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/Navbar.tsx\",\n        lineNumber: 9,\n        columnNumber: 5\n    }, this);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvTmF2YmFyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUE2QjtBQUNjO0FBQ0s7QUFFakMsU0FBU0c7SUFDdEIsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLGFBQWEsRUFBRUMsWUFBWSxFQUFFLEdBQUdMLHVEQUFPQTtJQUV4RCxxQkFDRSw4REFBQ007UUFBSUMsV0FBVTtrQkFDYiw0RUFBQ0M7WUFBSUQsV0FBVTtzQkFDYiw0RUFBQ0M7Z0JBQUlELFdBQVU7O2tDQUNiLDhEQUFDQzt3QkFBSUQsV0FBVTs7MENBQ2IsOERBQUNDO2dDQUFJRCxXQUFVOzBDQUNiLDRFQUFDUixrREFBSUE7b0NBQUNVLE1BQUs7b0NBQUlGLFdBQVU7OENBQWtDOzs7Ozs7Ozs7OzswQ0FJN0QsOERBQUNDO2dDQUFJRCxXQUFVOztrREFDYiw4REFBQ1Isa0RBQUlBO3dDQUNIVSxNQUFLO3dDQUNMRixXQUFVO2tEQUNYOzs7Ozs7a0RBR0QsOERBQUNSLGtEQUFJQTt3Q0FDSFUsTUFBSzt3Q0FDTEYsV0FBVTtrREFDWDs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tDQUtMLDhEQUFDQzt3QkFBSUQsV0FBVTs7MENBQ2IsOERBQUNOLHdEQUFlQTs7Ozs7NEJBQ2ZFLHdCQUNDLDhEQUFDSztnQ0FBSUQsV0FBVTs7b0NBQ1pKLFFBQVFPLFNBQVMsQ0FBQyxHQUFHO29DQUFHO29DQUFJUCxRQUFRTyxTQUFTLENBQUNQLFFBQVFRLE1BQU0sR0FBRzs7Ozs7O3FEQUdsRSw4REFBQ0M7Z0NBQ0NDLFNBQVNUO2dDQUNUVSxVQUFVVDtnQ0FDVkUsV0FBVTswQ0FFVEYsZUFBZSxtQkFBbUI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFRbkQiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGRpeWFyYm9sZWdlbm92L3RlbmRlci9mcm9udGVuZC9jb21wb25lbnRzL05hdmJhci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCB7IHVzZVdlYjMgfSBmcm9tICcuLi9ob29rcy91c2VXZWIzJztcbmltcG9ydCBOZXR3b3JrU2VsZWN0b3IgZnJvbSAnLi9OZXR3b3JrU2VsZWN0b3InO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBOYXZiYXIoKSB7XG4gIGNvbnN0IHsgYWNjb3VudCwgY29ubmVjdFdhbGxldCwgaXNDb25uZWN0aW5nIH0gPSB1c2VXZWIzKCk7XG5cbiAgcmV0dXJuIChcbiAgICA8bmF2IGNsYXNzTmFtZT1cImJnLXdoaXRlIHNoYWRvdy1sZ1wiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtdy03eGwgbXgtYXV0byBweC00IHNtOnB4LTYgbGc6cHgtOFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1iZXR3ZWVuIGgtMTZcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXhcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleC1zaHJpbmstMCBmbGV4IGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgICAgICA8TGluayBocmVmPVwiL1wiIGNsYXNzTmFtZT1cInRleHQteGwgZm9udC1ib2xkIHRleHQtZ3JheS04MDBcIj5cbiAgICAgICAgICAgICAgICBUZW5kZXJDaGFpblxuICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGlkZGVuIHNtOm1sLTYgc206ZmxleCBzbTpzcGFjZS14LThcIj5cbiAgICAgICAgICAgICAgPExpbmtcbiAgICAgICAgICAgICAgICBocmVmPVwiL1wiXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaW5saW5lLWZsZXggaXRlbXMtY2VudGVyIHB4LTEgcHQtMSB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS05MDAgYm9yZGVyLWItMiBib3JkZXItdHJhbnNwYXJlbnQgaG92ZXI6Ym9yZGVyLWdyYXktMzAwXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgINCT0LvQsNCy0L3QsNGPXG4gICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgPExpbmtcbiAgICAgICAgICAgICAgICBocmVmPVwiL2Rhc2hib2FyZFwiXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaW5saW5lLWZsZXggaXRlbXMtY2VudGVyIHB4LTEgcHQtMSB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS05MDAgYm9yZGVyLWItMiBib3JkZXItdHJhbnNwYXJlbnQgaG92ZXI6Ym9yZGVyLWdyYXktMzAwXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgINCa0LDQsdC40L3QtdGCXG4gICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0zXCI+XG4gICAgICAgICAgICA8TmV0d29ya1NlbGVjdG9yIC8+XG4gICAgICAgICAgICB7YWNjb3VudCA/IChcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS05MDAgYmctZ3JheS0xMDAgcm91bmRlZC1mdWxsIHB4LTQgcHktMlwiPlxuICAgICAgICAgICAgICAgIHthY2NvdW50LnN1YnN0cmluZygwLCA2KX0uLi57YWNjb3VudC5zdWJzdHJpbmcoYWNjb3VudC5sZW5ndGggLSA0KX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgb25DbGljaz17Y29ubmVjdFdhbGxldH1cbiAgICAgICAgICAgICAgICBkaXNhYmxlZD17aXNDb25uZWN0aW5nfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImlubGluZS1mbGV4IGl0ZW1zLWNlbnRlciBweC00IHB5LTIgYm9yZGVyIGJvcmRlci10cmFuc3BhcmVudCB0ZXh0LXNtIGZvbnQtbWVkaXVtIHJvdW5kZWQtbWQgdGV4dC13aGl0ZSBiZy1ibHVlLTYwMCBob3ZlcjpiZy1ibHVlLTcwMCBmb2N1czpvdXRsaW5lLW5vbmUgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctb2Zmc2V0LTIgZm9jdXM6cmluZy1ibHVlLTUwMCBkaXNhYmxlZDpiZy1ibHVlLTMwMFwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7aXNDb25uZWN0aW5nID8gXCLQn9C+0LTQutC70Y7Rh9C10L3QuNC1Li4uXCIgOiBcItCf0L7QtNC60LvRjtGH0LjRgtGMINC60L7RiNC10LvQtdC6XCJ9XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L25hdj5cbiAgKTtcbn0iXSwibmFtZXMiOlsiTGluayIsInVzZVdlYjMiLCJOZXR3b3JrU2VsZWN0b3IiLCJOYXZiYXIiLCJhY2NvdW50IiwiY29ubmVjdFdhbGxldCIsImlzQ29ubmVjdGluZyIsIm5hdiIsImNsYXNzTmFtZSIsImRpdiIsImhyZWYiLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJidXR0b24iLCJvbkNsaWNrIiwiZGlzYWJsZWQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/Navbar.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/NetworkSelector.tsx":
/*!****************************************!*\
  !*** ./components/NetworkSelector.tsx ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ NetworkSelector)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hooks_useContractTender__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useContractTender */ \"(pages-dir-node)/./hooks/useContractTender.ts\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hot-toast */ \"react-hot-toast\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_hooks_useContractTender__WEBPACK_IMPORTED_MODULE_2__, react_hot_toast__WEBPACK_IMPORTED_MODULE_3__]);\n([_hooks_useContractTender__WEBPACK_IMPORTED_MODULE_2__, react_hot_toast__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nfunction NetworkSelector() {\n    const { addHardhatNetworkToMetaMask, forceContractInitialization, isContractAvailable, contractStatus } = (0,_hooks_useContractTender__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n    const [isAdding, setIsAdding] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handleAddHardhatNetwork = async ()=>{\n        setIsAdding(true);\n        try {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast.loading('Добавление сети Hardhat...', {\n                id: 'add-hardhat'\n            });\n            const success = await addHardhatNetworkToMetaMask();\n            if (success) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast.success('Сеть Hardhat успешно добавлена!', {\n                    id: 'add-hardhat'\n                });\n                // Try to reconnect to contract\n                const contractInitialized = await forceContractInitialization();\n                if (contractInitialized) {\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast.success('Подключение к контракту успешно!', {\n                        id: 'contract-init'\n                    });\n                } else {\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast.error('Не удалось подключиться к контракту', {\n                        id: 'contract-init'\n                    });\n                }\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast.error('Не удалось добавить сеть Hardhat', {\n                    id: 'add-hardhat'\n                });\n            }\n        } catch (error) {\n            console.error('Error adding Hardhat network:', error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast.error('Ошибка при добавлении сети Hardhat', {\n                id: 'add-hardhat'\n            });\n        } finally{\n            setIsAdding(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n            onClick: handleAddHardhatNetwork,\n            disabled: isAdding || isContractAvailable,\n            className: `flex items-center px-3 py-1.5 text-xs font-medium rounded-md ${isContractAvailable ? 'text-green-800 bg-green-100' : 'text-yellow-800 bg-yellow-100 hover:bg-yellow-200'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500 disabled:opacity-50`,\n            children: isContractAvailable ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"flex items-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"h-2 w-2 rounded-full bg-green-500 mr-1.5\"\n                    }, void 0, false, {\n                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/NetworkSelector.tsx\",\n                        lineNumber: 48,\n                        columnNumber: 13\n                    }, this),\n                    \"Контракт доступен\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/NetworkSelector.tsx\",\n                lineNumber: 47,\n                columnNumber: 11\n            }, this) : isAdding ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"flex items-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        className: \"animate-spin -ml-1 mr-2 h-4 w-4 text-yellow-800\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                className: \"opacity-25\",\n                                cx: \"12\",\n                                cy: \"12\",\n                                r: \"10\",\n                                stroke: \"currentColor\",\n                                strokeWidth: \"4\"\n                            }, void 0, false, {\n                                fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/NetworkSelector.tsx\",\n                                lineNumber: 54,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                className: \"opacity-75\",\n                                fill: \"currentColor\",\n                                d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                            }, void 0, false, {\n                                fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/NetworkSelector.tsx\",\n                                lineNumber: 55,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/NetworkSelector.tsx\",\n                        lineNumber: 53,\n                        columnNumber: 13\n                    }, this),\n                    \"Подключение...\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/NetworkSelector.tsx\",\n                lineNumber: 52,\n                columnNumber: 11\n            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"flex items-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"h-2 w-2 rounded-full bg-yellow-500 mr-1.5\"\n                    }, void 0, false, {\n                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/NetworkSelector.tsx\",\n                        lineNumber: 61,\n                        columnNumber: 13\n                    }, this),\n                    \"Подключить к Hardhat\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/NetworkSelector.tsx\",\n                lineNumber: 60,\n                columnNumber: 11\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/NetworkSelector.tsx\",\n            lineNumber: 37,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/NetworkSelector.tsx\",\n        lineNumber: 36,\n        columnNumber: 5\n    }, this);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvTmV0d29ya1NlbGVjdG9yLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFpQztBQUMwQjtBQUNuQjtBQUV6QixTQUFTRztJQUN0QixNQUFNLEVBQUVDLDJCQUEyQixFQUFFQywyQkFBMkIsRUFBRUMsbUJBQW1CLEVBQUVDLGNBQWMsRUFBRSxHQUFHTixvRUFBaUJBO0lBQzNILE1BQU0sQ0FBQ08sVUFBVUMsWUFBWSxHQUFHVCwrQ0FBUUEsQ0FBQztJQUV6QyxNQUFNVSwwQkFBMEI7UUFDOUJELFlBQVk7UUFDWixJQUFJO1lBQ0ZQLGtEQUFLQSxDQUFDUyxPQUFPLENBQUMsOEJBQThCO2dCQUFFQyxJQUFJO1lBQWM7WUFDaEUsTUFBTUMsVUFBVSxNQUFNVDtZQUV0QixJQUFJUyxTQUFTO2dCQUNYWCxrREFBS0EsQ0FBQ1csT0FBTyxDQUFDLG1DQUFtQztvQkFBRUQsSUFBSTtnQkFBYztnQkFDckUsK0JBQStCO2dCQUMvQixNQUFNRSxzQkFBc0IsTUFBTVQ7Z0JBQ2xDLElBQUlTLHFCQUFxQjtvQkFDdkJaLGtEQUFLQSxDQUFDVyxPQUFPLENBQUMsb0NBQW9DO3dCQUFFRCxJQUFJO29CQUFnQjtnQkFDMUUsT0FBTztvQkFDTFYsa0RBQUtBLENBQUNhLEtBQUssQ0FBQyx1Q0FBdUM7d0JBQUVILElBQUk7b0JBQWdCO2dCQUMzRTtZQUNGLE9BQU87Z0JBQ0xWLGtEQUFLQSxDQUFDYSxLQUFLLENBQUMsb0NBQW9DO29CQUFFSCxJQUFJO2dCQUFjO1lBQ3RFO1FBQ0YsRUFBRSxPQUFPRyxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyxpQ0FBaUNBO1lBQy9DYixrREFBS0EsQ0FBQ2EsS0FBSyxDQUFDLHNDQUFzQztnQkFBRUgsSUFBSTtZQUFjO1FBQ3hFLFNBQVU7WUFDUkgsWUFBWTtRQUNkO0lBQ0Y7SUFFQSxxQkFDRSw4REFBQ1E7UUFBSUMsV0FBVTtrQkFDYiw0RUFBQ0M7WUFDQ0MsU0FBU1Y7WUFDVFcsVUFBVWIsWUFBWUY7WUFDdEJZLFdBQVcsQ0FBQyw2REFBNkQsRUFDdkVaLHNCQUNJLGdDQUNBLG9EQUNMLDhGQUE4RixDQUFDO3NCQUUvRkEsb0NBQ0MsOERBQUNnQjtnQkFBS0osV0FBVTs7a0NBQ2QsOERBQUNJO3dCQUFLSixXQUFVOzs7Ozs7b0JBQWtEOzs7Ozs7dUJBR2xFVix5QkFDRiw4REFBQ2M7Z0JBQUtKLFdBQVU7O2tDQUNkLDhEQUFDSzt3QkFBSUwsV0FBVTt3QkFBa0RNLE9BQU07d0JBQTZCQyxNQUFLO3dCQUFPQyxTQUFROzswQ0FDdEgsOERBQUNDO2dDQUFPVCxXQUFVO2dDQUFhVSxJQUFHO2dDQUFLQyxJQUFHO2dDQUFLQyxHQUFFO2dDQUFLQyxRQUFPO2dDQUFlQyxhQUFZOzs7Ozs7MENBQ3hGLDhEQUFDQztnQ0FBS2YsV0FBVTtnQ0FBYU8sTUFBSztnQ0FBZVMsR0FBRTs7Ozs7Ozs7Ozs7O29CQUMvQzs7Ozs7O3FDQUlSLDhEQUFDWjtnQkFBS0osV0FBVTs7a0NBQ2QsOERBQUNJO3dCQUFLSixXQUFVOzs7Ozs7b0JBQW1EOzs7Ozs7Ozs7Ozs7Ozs7OztBQU8vRSIsInNvdXJjZXMiOlsiL1VzZXJzL2FsZGl5YXJib2xlZ2Vub3YvdGVuZGVyL2Zyb250ZW5kL2NvbXBvbmVudHMvTmV0d29ya1NlbGVjdG9yLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VDb250cmFjdFRlbmRlciBmcm9tICcuLi9ob29rcy91c2VDb250cmFjdFRlbmRlcic7XG5pbXBvcnQgeyB0b2FzdCB9IGZyb20gJ3JlYWN0LWhvdC10b2FzdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5ldHdvcmtTZWxlY3RvcigpIHtcbiAgY29uc3QgeyBhZGRIYXJkaGF0TmV0d29ya1RvTWV0YU1hc2ssIGZvcmNlQ29udHJhY3RJbml0aWFsaXphdGlvbiwgaXNDb250cmFjdEF2YWlsYWJsZSwgY29udHJhY3RTdGF0dXMgfSA9IHVzZUNvbnRyYWN0VGVuZGVyKCk7XG4gIGNvbnN0IFtpc0FkZGluZywgc2V0SXNBZGRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIGNvbnN0IGhhbmRsZUFkZEhhcmRoYXROZXR3b3JrID0gYXN5bmMgKCkgPT4ge1xuICAgIHNldElzQWRkaW5nKHRydWUpO1xuICAgIHRyeSB7XG4gICAgICB0b2FzdC5sb2FkaW5nKCfQlNC+0LHQsNCy0LvQtdC90LjQtSDRgdC10YLQuCBIYXJkaGF0Li4uJywgeyBpZDogJ2FkZC1oYXJkaGF0JyB9KTtcbiAgICAgIGNvbnN0IHN1Y2Nlc3MgPSBhd2FpdCBhZGRIYXJkaGF0TmV0d29ya1RvTWV0YU1hc2soKTtcbiAgICAgIFxuICAgICAgaWYgKHN1Y2Nlc3MpIHtcbiAgICAgICAgdG9hc3Quc3VjY2Vzcygn0KHQtdGC0YwgSGFyZGhhdCDRg9GB0L/QtdGI0L3QviDQtNC+0LHQsNCy0LvQtdC90LAhJywgeyBpZDogJ2FkZC1oYXJkaGF0JyB9KTtcbiAgICAgICAgLy8gVHJ5IHRvIHJlY29ubmVjdCB0byBjb250cmFjdFxuICAgICAgICBjb25zdCBjb250cmFjdEluaXRpYWxpemVkID0gYXdhaXQgZm9yY2VDb250cmFjdEluaXRpYWxpemF0aW9uKCk7XG4gICAgICAgIGlmIChjb250cmFjdEluaXRpYWxpemVkKSB7XG4gICAgICAgICAgdG9hc3Quc3VjY2Vzcygn0J/QvtC00LrQu9GO0YfQtdC90LjQtSDQuiDQutC+0L3RgtGA0LDQutGC0YMg0YPRgdC/0LXRiNC90L4hJywgeyBpZDogJ2NvbnRyYWN0LWluaXQnIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRvYXN0LmVycm9yKCfQndC1INGD0LTQsNC70L7RgdGMINC/0L7QtNC60LvRjtGH0LjRgtGM0YHRjyDQuiDQutC+0L3RgtGA0LDQutGC0YMnLCB7IGlkOiAnY29udHJhY3QtaW5pdCcgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRvYXN0LmVycm9yKCfQndC1INGD0LTQsNC70L7RgdGMINC00L7QsdCw0LLQuNGC0Ywg0YHQtdGC0YwgSGFyZGhhdCcsIHsgaWQ6ICdhZGQtaGFyZGhhdCcgfSk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGFkZGluZyBIYXJkaGF0IG5ldHdvcms6JywgZXJyb3IpO1xuICAgICAgdG9hc3QuZXJyb3IoJ9Ce0YjQuNCx0LrQsCDQv9GA0Lgg0LTQvtCx0LDQstC70LXQvdC40Lgg0YHQtdGC0LggSGFyZGhhdCcsIHsgaWQ6ICdhZGQtaGFyZGhhdCcgfSk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldElzQWRkaW5nKGZhbHNlKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMlwiPlxuICAgICAgPGJ1dHRvblxuICAgICAgICBvbkNsaWNrPXtoYW5kbGVBZGRIYXJkaGF0TmV0d29ya31cbiAgICAgICAgZGlzYWJsZWQ9e2lzQWRkaW5nIHx8IGlzQ29udHJhY3RBdmFpbGFibGV9XG4gICAgICAgIGNsYXNzTmFtZT17YGZsZXggaXRlbXMtY2VudGVyIHB4LTMgcHktMS41IHRleHQteHMgZm9udC1tZWRpdW0gcm91bmRlZC1tZCAke1xuICAgICAgICAgIGlzQ29udHJhY3RBdmFpbGFibGUgXG4gICAgICAgICAgICA/ICd0ZXh0LWdyZWVuLTgwMCBiZy1ncmVlbi0xMDAnIFxuICAgICAgICAgICAgOiAndGV4dC15ZWxsb3ctODAwIGJnLXllbGxvdy0xMDAgaG92ZXI6YmcteWVsbG93LTIwMCdcbiAgICAgICAgfSBmb2N1czpvdXRsaW5lLW5vbmUgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctb2Zmc2V0LTIgZm9jdXM6cmluZy15ZWxsb3ctNTAwIGRpc2FibGVkOm9wYWNpdHktNTBgfVxuICAgICAgPlxuICAgICAgICB7aXNDb250cmFjdEF2YWlsYWJsZSA/IChcbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiaC0yIHctMiByb3VuZGVkLWZ1bGwgYmctZ3JlZW4tNTAwIG1yLTEuNVwiPjwvc3Bhbj5cbiAgICAgICAgICAgINCa0L7QvdGC0YDQsNC60YIg0LTQvtGB0YLRg9C/0LXQvVxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgKSA6IGlzQWRkaW5nID8gKFxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyXCI+XG4gICAgICAgICAgICA8c3ZnIGNsYXNzTmFtZT1cImFuaW1hdGUtc3BpbiAtbWwtMSBtci0yIGgtNCB3LTQgdGV4dC15ZWxsb3ctODAwXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJub25lXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICAgICAgICA8Y2lyY2xlIGNsYXNzTmFtZT1cIm9wYWNpdHktMjVcIiBjeD1cIjEyXCIgY3k9XCIxMlwiIHI9XCIxMFwiIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiIHN0cm9rZVdpZHRoPVwiNFwiPjwvY2lyY2xlPlxuICAgICAgICAgICAgICA8cGF0aCBjbGFzc05hbWU9XCJvcGFjaXR5LTc1XCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIGQ9XCJNNCAxMmE4IDggMCAwMTgtOFYwQzUuMzczIDAgMCA1LjM3MyAwIDEyaDR6bTIgNS4yOTFBNy45NjIgNy45NjIgMCAwMTQgMTJIMGMwIDMuMDQyIDEuMTM1IDUuODI0IDMgNy45MzhsMy0yLjY0N3pcIj48L3BhdGg+XG4gICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgINCf0L7QtNC60LvRjtGH0LXQvdC40LUuLi5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXJcIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImgtMiB3LTIgcm91bmRlZC1mdWxsIGJnLXllbGxvdy01MDAgbXItMS41XCI+PC9zcGFuPlxuICAgICAgICAgICAg0J/QvtC00LrQu9GO0YfQuNGC0Ywg0LogSGFyZGhhdFxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgKX1cbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICApO1xufSAiXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VDb250cmFjdFRlbmRlciIsInRvYXN0IiwiTmV0d29ya1NlbGVjdG9yIiwiYWRkSGFyZGhhdE5ldHdvcmtUb01ldGFNYXNrIiwiZm9yY2VDb250cmFjdEluaXRpYWxpemF0aW9uIiwiaXNDb250cmFjdEF2YWlsYWJsZSIsImNvbnRyYWN0U3RhdHVzIiwiaXNBZGRpbmciLCJzZXRJc0FkZGluZyIsImhhbmRsZUFkZEhhcmRoYXROZXR3b3JrIiwibG9hZGluZyIsImlkIiwic3VjY2VzcyIsImNvbnRyYWN0SW5pdGlhbGl6ZWQiLCJlcnJvciIsImNvbnNvbGUiLCJkaXYiLCJjbGFzc05hbWUiLCJidXR0b24iLCJvbkNsaWNrIiwiZGlzYWJsZWQiLCJzcGFuIiwic3ZnIiwieG1sbnMiLCJmaWxsIiwidmlld0JveCIsImNpcmNsZSIsImN4IiwiY3kiLCJyIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJwYXRoIiwiZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/NetworkSelector.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/PricePredictor.tsx":
/*!***************************************!*\
  !*** ./components/PricePredictor.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PricePredictor)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction PricePredictor({ distance, weight, cargoType, urgencyDays }) {\n    const [prediction, setPrediction] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const handlePredict = async ()=>{\n        if (!distance || !weight) {\n            setError('Пожалуйста, укажите расстояние и вес');\n            return;\n        }\n        setLoading(true);\n        setError(null);\n        try {\n            const response = await fetch('http://localhost:8000/predict', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    distance_km: parseFloat(distance),\n                    weight_kg: parseFloat(weight),\n                    cargo_type: cargoType,\n                    urgency_days: parseFloat(urgencyDays)\n                })\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.detail || 'Ошибка при получении прогноза');\n            }\n            const data = await response.json();\n            setPrediction(data.predicted_price.toString());\n        } catch (err) {\n            setError(err instanceof Error ? err.message : 'Неизвестная ошибка');\n            console.error(\"Prediction error:\", err);\n        } finally{\n            setLoading(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"predictor-container\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                children: \"Предсказание цены\"\n            }, void 0, false, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/PricePredictor.tsx\",\n                lineNumber: 58,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: handlePredict,\n                disabled: loading,\n                className: \"predict-button\",\n                children: loading ? 'Загрузка...' : 'Рассчитать цену'\n            }, void 0, false, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/PricePredictor.tsx\",\n                lineNumber: 59,\n                columnNumber: 7\n            }, this),\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"error-message\",\n                children: error\n            }, void 0, false, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/PricePredictor.tsx\",\n                lineNumber: 68,\n                columnNumber: 9\n            }, this),\n            prediction && !error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"prediction-result\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                        children: \"Предсказанная цена:\"\n                    }, void 0, false, {\n                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/PricePredictor.tsx\",\n                        lineNumber: 73,\n                        columnNumber: 11\n                    }, this),\n                    \" $\",\n                    prediction\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/PricePredictor.tsx\",\n                lineNumber: 72,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/aldiyarbolegenov/tender/frontend/components/PricePredictor.tsx\",\n        lineNumber: 57,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvUHJpY2VQcmVkaWN0b3IudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpQztBQVNsQixTQUFTQyxlQUFlLEVBQ3JDQyxRQUFRLEVBQ1JDLE1BQU0sRUFDTkMsU0FBUyxFQUNUQyxXQUFXLEVBQ1M7SUFDcEIsTUFBTSxDQUFDQyxZQUFZQyxjQUFjLEdBQUdQLCtDQUFRQSxDQUFnQjtJQUM1RCxNQUFNLENBQUNRLFNBQVNDLFdBQVcsR0FBR1QsK0NBQVFBLENBQUM7SUFDdkMsTUFBTSxDQUFDVSxPQUFPQyxTQUFTLEdBQUdYLCtDQUFRQSxDQUFnQjtJQUVsRCxNQUFNWSxnQkFBZ0I7UUFDcEIsSUFBSSxDQUFDVixZQUFZLENBQUNDLFFBQVE7WUFDeEJRLFNBQVM7WUFDVDtRQUNGO1FBRUFGLFdBQVc7UUFDWEUsU0FBUztRQUVULElBQUk7WUFDRixNQUFNRSxXQUFXLE1BQU1DLE1BQU0saUNBQWlDO2dCQUM1REMsUUFBUTtnQkFDUkMsU0FBUztvQkFBRSxnQkFBZ0I7Z0JBQW1CO2dCQUM5Q0MsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO29CQUNuQkMsYUFBYUMsV0FBV25CO29CQUN4Qm9CLFdBQVdELFdBQVdsQjtvQkFDdEJvQixZQUFZbkI7b0JBQ1pvQixjQUFjSCxXQUFXaEI7Z0JBQzNCO1lBQ0Y7WUFFQSxJQUFJLENBQUNRLFNBQVNZLEVBQUUsRUFBRTtnQkFDaEIsTUFBTUMsWUFBWSxNQUFNYixTQUFTYyxJQUFJO2dCQUNyQyxNQUFNLElBQUlDLE1BQU1GLFVBQVVHLE1BQU0sSUFBSTtZQUN0QztZQUVBLE1BQU1DLE9BQU8sTUFBTWpCLFNBQVNjLElBQUk7WUFDaENwQixjQUFjdUIsS0FBS0MsZUFBZSxDQUFDQyxRQUFRO1FBQzdDLEVBQUUsT0FBT0MsS0FBSztZQUNadEIsU0FBU3NCLGVBQWVMLFFBQVFLLElBQUlDLE9BQU8sR0FBRztZQUM5Q0MsUUFBUXpCLEtBQUssQ0FBQyxxQkFBcUJ1QjtRQUNyQyxTQUFVO1lBQ1J4QixXQUFXO1FBQ2I7SUFDRjtJQUVBLHFCQUNFLDhEQUFDMkI7UUFBSUMsV0FBVTs7MEJBQ2IsOERBQUNDOzBCQUFHOzs7Ozs7MEJBQ0osOERBQUNDO2dCQUNDQyxTQUFTNUI7Z0JBQ1Q2QixVQUFVakM7Z0JBQ1Y2QixXQUFVOzBCQUVUN0IsVUFBVSxnQkFBZ0I7Ozs7OztZQUc1QkUsdUJBQ0MsOERBQUMwQjtnQkFBSUMsV0FBVTswQkFBaUIzQjs7Ozs7O1lBR2pDSixjQUFjLENBQUNJLHVCQUNkLDhEQUFDMEI7Z0JBQUlDLFdBQVU7O2tDQUNiLDhEQUFDSztrQ0FBTzs7Ozs7O29CQUE0QjtvQkFBR3BDOzs7Ozs7Ozs7Ozs7O0FBS2pEIiwic291cmNlcyI6WyIvVXNlcnMvYWxkaXlhcmJvbGVnZW5vdi90ZW5kZXIvZnJvbnRlbmQvY29tcG9uZW50cy9QcmljZVByZWRpY3Rvci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBQcmljZVByZWRpY3RvclByb3BzIHtcbiAgZGlzdGFuY2U6IHN0cmluZztcbiAgd2VpZ2h0OiBzdHJpbmc7XG4gIGNhcmdvVHlwZTogc3RyaW5nO1xuICB1cmdlbmN5RGF5czogc3RyaW5nO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQcmljZVByZWRpY3Rvcih7IFxuICBkaXN0YW5jZSwgXG4gIHdlaWdodCwgXG4gIGNhcmdvVHlwZSxcbiAgdXJnZW5jeURheXNcbn06IFByaWNlUHJlZGljdG9yUHJvcHMpIHtcbiAgY29uc3QgW3ByZWRpY3Rpb24sIHNldFByZWRpY3Rpb25dID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcblxuICBjb25zdCBoYW5kbGVQcmVkaWN0ID0gYXN5bmMgKCkgPT4ge1xuICAgIGlmICghZGlzdGFuY2UgfHwgIXdlaWdodCkge1xuICAgICAgc2V0RXJyb3IoJ9Cf0L7QttCw0LvRg9C50YHRgtCwLCDRg9C60LDQttC40YLQtSDRgNCw0YHRgdGC0L7Rj9C90LjQtSDQuCDQstC10YEnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgIHNldEVycm9yKG51bGwpO1xuICAgIFxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwOi8vbG9jYWxob3N0OjgwMDAvcHJlZGljdCcsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgZGlzdGFuY2Vfa206IHBhcnNlRmxvYXQoZGlzdGFuY2UpLFxuICAgICAgICAgIHdlaWdodF9rZzogcGFyc2VGbG9hdCh3ZWlnaHQpLFxuICAgICAgICAgIGNhcmdvX3R5cGU6IGNhcmdvVHlwZSxcbiAgICAgICAgICB1cmdlbmN5X2RheXM6IHBhcnNlRmxvYXQodXJnZW5jeURheXMpXG4gICAgICAgIH0pLFxuICAgICAgfSk7XG5cbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc3QgZXJyb3JEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JEYXRhLmRldGFpbCB8fCAn0J7RiNC40LHQutCwINC/0YDQuCDQv9C+0LvRg9GH0LXQvdC40Lgg0L/RgNC+0LPQvdC+0LfQsCcpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgc2V0UHJlZGljdGlvbihkYXRhLnByZWRpY3RlZF9wcmljZS50b1N0cmluZygpKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHNldEVycm9yKGVyciBpbnN0YW5jZW9mIEVycm9yID8gZXJyLm1lc3NhZ2UgOiAn0J3QtdC40LfQstC10YHRgtC90LDRjyDQvtGI0LjQsdC60LAnKTtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJQcmVkaWN0aW9uIGVycm9yOlwiLCBlcnIpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInByZWRpY3Rvci1jb250YWluZXJcIj5cbiAgICAgIDxoMz7Qn9GA0LXQtNGB0LrQsNC30LDQvdC40LUg0YbQtdC90Ys8L2gzPlxuICAgICAgPGJ1dHRvbiBcbiAgICAgICAgb25DbGljaz17aGFuZGxlUHJlZGljdH0gXG4gICAgICAgIGRpc2FibGVkPXtsb2FkaW5nfVxuICAgICAgICBjbGFzc05hbWU9XCJwcmVkaWN0LWJ1dHRvblwiXG4gICAgICA+XG4gICAgICAgIHtsb2FkaW5nID8gJ9CX0LDQs9GA0YPQt9C60LAuLi4nIDogJ9Cg0LDRgdGB0YfQuNGC0LDRgtGMINGG0LXQvdGDJ31cbiAgICAgIDwvYnV0dG9uPlxuICAgICAgXG4gICAgICB7ZXJyb3IgJiYgKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImVycm9yLW1lc3NhZ2VcIj57ZXJyb3J9PC9kaXY+XG4gICAgICApfVxuXG4gICAgICB7cHJlZGljdGlvbiAmJiAhZXJyb3IgJiYgKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInByZWRpY3Rpb24tcmVzdWx0XCI+XG4gICAgICAgICAgPHN0cm9uZz7Qn9GA0LXQtNGB0LrQsNC30LDQvdC90LDRjyDRhtC10L3QsDo8L3N0cm9uZz4gJHtwcmVkaWN0aW9ufVxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59Il0sIm5hbWVzIjpbInVzZVN0YXRlIiwiUHJpY2VQcmVkaWN0b3IiLCJkaXN0YW5jZSIsIndlaWdodCIsImNhcmdvVHlwZSIsInVyZ2VuY3lEYXlzIiwicHJlZGljdGlvbiIsInNldFByZWRpY3Rpb24iLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsImVycm9yIiwic2V0RXJyb3IiLCJoYW5kbGVQcmVkaWN0IiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImRpc3RhbmNlX2ttIiwicGFyc2VGbG9hdCIsIndlaWdodF9rZyIsImNhcmdvX3R5cGUiLCJ1cmdlbmN5X2RheXMiLCJvayIsImVycm9yRGF0YSIsImpzb24iLCJFcnJvciIsImRldGFpbCIsImRhdGEiLCJwcmVkaWN0ZWRfcHJpY2UiLCJ0b1N0cmluZyIsImVyciIsIm1lc3NhZ2UiLCJjb25zb2xlIiwiZGl2IiwiY2xhc3NOYW1lIiwiaDMiLCJidXR0b24iLCJvbkNsaWNrIiwiZGlzYWJsZWQiLCJzdHJvbmciXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/PricePredictor.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./hooks/useContractTender.ts":
/*!************************************!*\
  !*** ./hooks/useContractTender.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useContractTender)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _useWeb3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useWeb3 */ \"(pages-dir-node)/./hooks/useWeb3.ts\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"ethers\");\n/* harmony import */ var _abi_TenderChain_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../abi/TenderChain.json */ \"(pages-dir-node)/./abi/TenderChain.json\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_useWeb3__WEBPACK_IMPORTED_MODULE_1__, ethers__WEBPACK_IMPORTED_MODULE_2__]);\n([_useWeb3__WEBPACK_IMPORTED_MODULE_1__, ethers__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n// Import the generated ABI\n\n// Fallback ABI in case the import fails\nconst FALLBACK_ABI = [\n    // Main functions\n    \"function createTender(string _title, string _description, uint256 _budget, uint256 _deadline, uint256 _distance, uint256 _weight, string _cargoType, uint256 _urgencyDays, uint256 _expirationMinutes) public returns (uint256)\",\n    \"function getTender(uint256 _id) public view returns (uint256 id, string title, string description, uint256 budget, uint256 deadline, uint256 distance, uint256 weight, string cargoType, uint256 urgencyDays, address creator, address bidder, uint8 status, uint256 createdAt, uint256 expiresAt)\",\n    \"function getActiveTenders() public view returns (uint256[] memory)\",\n    \"function takeTender(uint256 _id) public\",\n    \"function submitBid(uint256 _id, string _proposal) public payable\",\n    \"function completeTender(uint256 _id) public\",\n    \"function cancelTender(uint256 _id) public\",\n    // State variables\n    \"function tenderCount() public view returns (uint256)\",\n    \"function tenders(uint256) public view returns (uint256 id, string title, string description, uint256 budget, uint256 deadline, uint256 distance, uint256 weight, string cargoType, uint256 urgencyDays, address creator, address bidder, uint8 status, uint256 createdAt, uint256 expiresAt)\",\n    // Events\n    \"event TenderCreated(uint256 indexed id, string title, uint256 budget, address indexed creator, uint256 expiresAt)\",\n    \"event TenderTaken(uint256 indexed id, address indexed bidder, uint256 timestamp)\",\n    \"event BidSubmitted(uint256 indexed id, address indexed bidder, string proposal, uint256 amount, uint256 timestamp)\",\n    \"event TenderCompleted(uint256 indexed id, address indexed bidder, uint256 timestamp)\",\n    \"event TenderCancelled(uint256 indexed id, address indexed creator, uint256 timestamp)\"\n];\n// Use the imported ABI if available, otherwise use the fallback\nconst ABI = _abi_TenderChain_json__WEBPACK_IMPORTED_MODULE_3__?.abi || FALLBACK_ABI;\n// Адрес контракта\nconst CONTRACT_ADDRESS = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\" || 0;\n// Добавляем дополнительное логирование для отладки\nconsole.log(\"Contract address from ENV:\", CONTRACT_ADDRESS);\n// Улучшенная функция для инициализации контракта\nconst MAX_INIT_ATTEMPTS = 5;\nconst INIT_RETRY_DELAY = 2000; // ms\n// Helper function to extract error messages from various error types\nconst getErrorMessage = (error)=>{\n    if (error instanceof Error) return error.message;\n    if (typeof error === 'string') return error;\n    return 'Unknown error occurred';\n};\n// Helper function to handle contract errors\nconst handleContractError = (error, defaultValue)=>{\n    console.error('Contract error:', error);\n    return {\n        success: false,\n        error: error?.message || error?.reason || 'Unknown contract error',\n        data: defaultValue\n    };\n};\n// Helper function to check if contract address has deployed code\nasync function verifyContractAddress(address, provider) {\n    try {\n        console.log(`🔍 Verifying contract at address: ${address}`);\n        // Check if address is valid\n        if (!ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.isAddress(address)) {\n            console.error('❌ Invalid address format:', address);\n            return false;\n        }\n        // Check if contract has code\n        const code = await provider.getCode(address);\n        // If there's no code at this address, it's not a contract\n        if (code === '0x' || code === '0x0') {\n            console.error('❌ No contract deployed at this address (empty bytecode)');\n            return false;\n        }\n        console.log(`✅ Contract found at ${address} with bytecode length: ${(code.length - 2) / 2} bytes`);\n        return true;\n    } catch (error) {\n        console.error('❌ Error verifying contract address:', error);\n        return false;\n    }\n}\n// Helper function to validate ABI contains expected methods\nfunction validateContractABI(abi) {\n    try {\n        console.log('🔍 Validating contract ABI structure...');\n        // Essential methods that should exist in the contract - update to match the actual contract\n        const requiredMethods = [\n            'tenderCount',\n            'createTender',\n            'getTender'\n        ];\n        const optionalMethods = [\n            'submitBid',\n            'getBidsForTender',\n            'takeTender',\n            'getActiveTenders'\n        ];\n        // Check if ABI is an array\n        if (!Array.isArray(abi)) {\n            console.error('❌ ABI is not an array:', abi);\n            return false;\n        }\n        // Extract function names from ABI\n        const methodNames = abi.filter((item)=>item.type === 'function' || typeof item === 'string' && item.includes('function')).map((item)=>{\n            if (typeof item === 'string') {\n                // Извлекаем имя функции из строки вида \"function name(...)\"\n                const match = item.match(/function\\s+([a-zA-Z0-9_]+)/);\n                return match ? match[1] : '';\n            }\n            return item.name;\n        }).filter(Boolean); // Фильтруем пустые строки\n        console.log('📋 Contract methods found in ABI:', methodNames);\n        // Check if all required methods exist in ABI\n        const missingRequiredMethods = requiredMethods.filter((method)=>!methodNames.includes(method));\n        if (missingRequiredMethods.length > 0) {\n            console.error('❌ Missing required methods in ABI:', missingRequiredMethods);\n            return false;\n        }\n        // Check for optional methods and just log warnings\n        const missingOptionalMethods = optionalMethods.filter((method)=>!methodNames.includes(method));\n        if (missingOptionalMethods.length > 0) {\n            console.warn('⚠️ Some optional methods are missing in ABI:', missingOptionalMethods);\n            console.warn('This may limit functionality but is not critical');\n        }\n        console.log('✅ Contract ABI contains all required methods');\n        return true;\n    } catch (error) {\n        console.error('❌ Error validating contract ABI:', error);\n        return false;\n    }\n}\nfunction useContractTender() {\n    // All state hooks must be called unconditionally at the top level\n    const { provider, signer, account } = (0,_useWeb3__WEBPACK_IMPORTED_MODULE_1__.useWeb3)();\n    const [contract, setContract] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isContractAvailable, setIsContractAvailable] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [contractStatus, setContractStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('idle');\n    const [contractErrorDetails, setContractErrorDetails] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Use refs to safely track values across renders\n    const contractRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const isContractAvailableRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(isContractAvailable);\n    // Track last call time for debouncing\n    const lastGetActiveTendersCall = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n    const isLoadingTenders = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const initAttempts = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n    // Улучшенная проверка подключения напрямую через window.ethereum\n    const forceContractInitialization = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[forceContractInitialization]\": async ()=>{\n            try {\n                setContractStatus('loading');\n                setContractErrorDetails(null);\n                console.log('🚀 Initializing contract...');\n                // Проверяем адрес контракта\n                if (!CONTRACT_ADDRESS) {\n                    console.error('❌ Contract address is not defined');\n                    setIsContractAvailable(false);\n                    setError('Smart contract address is not configured. Please check your environment settings.');\n                    setContractStatus('error');\n                    setContractErrorDetails('Missing contract address in environment configuration');\n                    return false;\n                }\n                console.log(`📋 Using contract address: ${CONTRACT_ADDRESS}`);\n                // Проверяем наличие window.ethereum\n                console.log('🔄 Checking window.ethereum availability');\n                if (true) {\n                    console.error('❌ window.ethereum is not available');\n                    setError('MetaMask extension is not installed or not accessible');\n                    setContractStatus('error');\n                    setContractErrorDetails('MetaMask extension is not installed or not accessible');\n                    return false;\n                }\n                console.log('✅ window.ethereum is available');\n                // Проверяем сеть\n                try {\n                    const chainId = await window.ethereum.request({\n                        method: 'eth_chainId'\n                    });\n                    console.log(`📊 Current chain ID: ${chainId}`);\n                    // Check if we're on Sepolia (0xaa36a7) or local Hardhat network (0x7a69)\n                    const isValidNetwork = chainId === '0xaa36a7' || chainId === '0x7a69';\n                    if (!isValidNetwork) {\n                        console.warn(`⚠️ Connected to unsupported network: ${chainId}, expected either 0xaa36a7 (Sepolia) or 0x7a69 (Hardhat local)`);\n                    } else {\n                        console.log(`✅ Connected to supported network: ${chainId}`);\n                    }\n                } catch (error) {\n                    console.error('❌ Error checking network:', error);\n                }\n                // Запрашиваем подключение к MetaMask\n                try {\n                    console.log('🔄 Requesting MetaMask accounts...');\n                    const accounts = await window.ethereum.request({\n                        method: 'eth_requestAccounts'\n                    });\n                    console.log(`✅ Connected to accounts: ${accounts.join(', ')}`);\n                } catch (error) {\n                    console.error('❌ User rejected account connection:', error);\n                    setError('User rejected MetaMask connection');\n                    setContractStatus('error');\n                    setContractErrorDetails('User rejected MetaMask connection');\n                    return false;\n                }\n                // Check current network and switch only if we're not on a supported network\n                try {\n                    const chainId = await window.ethereum.request({\n                        method: 'eth_chainId'\n                    });\n                    // If we're on Hardhat local network, don't try to switch to Sepolia\n                    if (chainId === '0x7a69') {\n                        console.log('✅ Already connected to Hardhat local network (0x7a69), not switching');\n                    } else if (chainId !== '0xaa36a7') {\n                        console.log('🔄 Not on a supported network, trying Hardhat local first...');\n                        try {\n                            // Try switching to Hardhat local first (since that's what we're using)\n                            await window.ethereum.request({\n                                method: 'wallet_switchEthereumChain',\n                                params: [\n                                    {\n                                        chainId: '0x7a69'\n                                    }\n                                ] // Hardhat local chainId\n                            });\n                            console.log('✅ Switched to Hardhat local network');\n                        } catch (hardhatSwitchError) {\n                            // If we can't switch to Hardhat, try Sepolia\n                            console.log('⚠️ Could not switch to Hardhat local, trying Sepolia...');\n                            try {\n                                await window.ethereum.request({\n                                    method: 'wallet_switchEthereumChain',\n                                    params: [\n                                        {\n                                            chainId: '0xaa36a7'\n                                        }\n                                    ] // Sepolia chainId\n                                });\n                                console.log('✅ Switched to Sepolia network');\n                            } catch (sepoliaSwitchError) {\n                                // If we can't switch to Sepolia and it's not because it doesn't exist, fail\n                                if (sepoliaSwitchError.code !== 4902) {\n                                    console.error('❌ Failed to switch to any supported network:', sepoliaSwitchError);\n                                    setError('Failed to switch to a supported network');\n                                    setContractStatus('error');\n                                    setContractErrorDetails('Failed to switch to a supported network');\n                                    return false;\n                                }\n                                // Try to add Sepolia if it doesn't exist\n                                console.log('🔄 Sepolia network not found, attempting to add it...');\n                                try {\n                                    await window.ethereum.request({\n                                        method: 'wallet_addEthereumChain',\n                                        params: [\n                                            {\n                                                chainId: '0xaa36a7',\n                                                chainName: 'Sepolia Testnet',\n                                                nativeCurrency: {\n                                                    name: 'ETH',\n                                                    symbol: 'ETH',\n                                                    decimals: 18\n                                                },\n                                                rpcUrls: [\n                                                    'https://sepolia.infura.io/v3/'\n                                                ],\n                                                blockExplorerUrls: [\n                                                    'https://sepolia.etherscan.io/'\n                                                ]\n                                            }\n                                        ]\n                                    });\n                                    console.log('✅ Added Sepolia network');\n                                } catch (addSepoliaError) {\n                                    console.error('❌ Failed to add Sepolia network:', addSepoliaError);\n                                    setError('Failed to add Sepolia network to MetaMask');\n                                    setContractStatus('error');\n                                    setContractErrorDetails('Failed to add Sepolia network to MetaMask');\n                                    return false;\n                                }\n                            }\n                        }\n                    } else {\n                        console.log('✅ Already connected to Sepolia network, not switching');\n                    }\n                } catch (networkError) {\n                    console.error('❌ Network switching error:', networkError);\n                    setError('Error switching networks');\n                    setContractStatus('error');\n                    setContractErrorDetails('Error switching networks');\n                    return false;\n                }\n                // Получаем провайдер и подписывающего\n                console.log('🔄 Creating provider and signer...');\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.BrowserProvider(window.ethereum);\n                const newSigner = await provider.getSigner();\n                const signerAddress = await newSigner.getAddress();\n                console.log(`✅ Got signer with address: ${signerAddress}`);\n                // Проверяем ABI\n                if (!ABI || ABI.length === 0) {\n                    console.error('❌ ABI is empty or undefined');\n                    setError('Contract ABI is missing or invalid');\n                    setContractStatus('error');\n                    setContractErrorDetails('Contract ABI is missing or invalid');\n                    return false;\n                }\n                // First validate the ABI\n                if (!validateContractABI(ABI)) {\n                    setIsContractAvailable(false);\n                    setError('Contract ABI is invalid or missing required methods. Check console for details.');\n                    setContractStatus('error');\n                    setContractErrorDetails('ABI validation failed: missing required methods or invalid format');\n                    return false;\n                }\n                // Проверяем наличие метода tenderCount в ABI\n                const hasTenderCount = ABI.some({\n                    \"useContractTender.useCallback[forceContractInitialization].hasTenderCount\": (item)=>typeof item === 'string' ? item.includes('tenderCount') : item.name === 'tenderCount'\n                }[\"useContractTender.useCallback[forceContractInitialization].hasTenderCount\"]);\n                if (!hasTenderCount) {\n                    console.warn('⚠️ tenderCount method not found in ABI');\n                }\n                // Создаем новый экземпляр контракта\n                console.log(`🔄 Creating contract instance at address: ${CONTRACT_ADDRESS}`);\n                const contract = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.Contract(CONTRACT_ADDRESS, ABI, newSigner);\n                contractRef.current = contract;\n                // Verify the contract address first\n                const isValidContract = await verifyContractAddress(CONTRACT_ADDRESS, provider);\n                if (!isValidContract) {\n                    console.error(`❌ No valid contract found at ${CONTRACT_ADDRESS}`);\n                    setIsContractAvailable(false);\n                    setError(`No valid contract found at address ${CONTRACT_ADDRESS}. The contract may not be deployed or the address may be incorrect.`);\n                    setContractStatus('error');\n                    setContractErrorDetails(`Invalid contract at ${CONTRACT_ADDRESS}: No bytecode found or invalid address format`);\n                    return false;\n                }\n                // Проверяем соединение с контрактом вызовом простой функции\n                try {\n                    console.log(`🔄 Testing contract with direct call to tenderCount()`);\n                    const count = await contract.tenderCount();\n                    console.log(`✅ Direct contract call succeeded! Tender count: ${count}`);\n                } catch (error) {\n                    console.error(`❌ Failed to call tenderCount():`, error);\n                    // Проверяем, является ли ошибка проблемой декодирования данных\n                    if (error.message.includes('could not decode result data')) {\n                        console.error('❌ Data decoding error - contract address or ABI mismatch!');\n                        setIsContractAvailable(false);\n                        setError(`Contract call failed: The contract at ${CONTRACT_ADDRESS} does not match the expected interface. Please verify the contract address and ABI.`);\n                        setContractStatus('error');\n                        setContractErrorDetails(`Contract call failed: The contract at ${CONTRACT_ADDRESS} does not match the expected interface. Please verify the contract address and ABI.`);\n                        return false;\n                    }\n                    // Проверяем другие распространенные ошибки\n                    if (error.message.includes('call revert exception')) {\n                        console.error('❌ Contract reverted the call - function may not exist or be accessible');\n                    } else if (error.message.includes('invalid address')) {\n                        console.error('❌ Invalid contract address format');\n                    } else if (error.message.includes('contract not deployed')) {\n                        console.error('❌ No contract deployed at this address');\n                    }\n                    setIsContractAvailable(false);\n                    setError(`Failed to verify contract: ${error.message}`);\n                    setContractStatus('error');\n                    setContractErrorDetails(`Failed to verify contract: ${error.message}`);\n                    return false;\n                }\n                // Обновляем состояние\n                setIsContractAvailable(true);\n                isContractAvailableRef.current = true;\n                setContract(contract);\n                console.log(`✅ Contract initialized successfully with direct method`);\n                return true;\n            } catch (err) {\n                console.error(`❌ Failed to initialize contract:`, err);\n                setIsContractAvailable(false);\n                setError(`Failed to initialize contract: ${err instanceof Error ? err.message : 'Unknown error'}`);\n                return false;\n            }\n        }\n    }[\"useContractTender.useCallback[forceContractInitialization]\"], []);\n    // Manual direct contract check function\n    const testContractConnection = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[testContractConnection]\": async ()=>{\n            console.log(\"Performing direct contract connection test\");\n            if (!CONTRACT_ADDRESS) {\n                console.error(\"No contract address provided\");\n                return false;\n            }\n            try {\n                // Try using window.ethereum directly if available\n                if (false) {} else {\n                    console.warn(\"No window.ethereum available for direct check\");\n                    return false;\n                }\n            } catch (error) {\n                console.error(\"Direct contract connection test failed:\", error);\n                return false;\n            }\n        }\n    }[\"useContractTender.useCallback[testContractConnection]\"], [\n        CONTRACT_ADDRESS,\n        contract,\n        isContractAvailable\n    ]);\n    // Запуск принудительной инициализации при изменении аккаунта\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useContractTender.useEffect\": ()=>{\n            if (account) {\n                console.log(\"Account changed or connected, attempting forced contract initialization\");\n                forceContractInitialization();\n            }\n        }\n    }[\"useContractTender.useEffect\"], [\n        account,\n        forceContractInitialization\n    ]);\n    // Улучшенная проверка контракта в useEffect\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useContractTender.useEffect\": ()=>{\n            let isMounted = true;\n            let retryCount = 0;\n            const checkContractWithRetry = {\n                \"useContractTender.useEffect.checkContractWithRetry\": async ()=>{\n                    if (!isMounted) return;\n                    console.log(`Contract check attempt ${retryCount + 1}/${MAX_INIT_ATTEMPTS}`);\n                    // Выход, если контракт уже доступен\n                    if (isContractAvailable && contract) {\n                        console.log(\"Contract already available, skipping check\");\n                        return;\n                    }\n                    // Проверка, есть ли доступный аккаунт\n                    if (account) {\n                        const success = await forceContractInitialization();\n                        if (success) {\n                            console.log(\"Contract initialization successful\");\n                            return;\n                        }\n                    }\n                    // Если мы дошли до этой точки, значит инициализация не удалась\n                    retryCount++;\n                    if (retryCount < MAX_INIT_ATTEMPTS) {\n                        console.log(`Will retry contract check in ${INIT_RETRY_DELAY}ms`);\n                        setTimeout(checkContractWithRetry, INIT_RETRY_DELAY);\n                    } else {\n                        console.log(\"Maximum contract check attempts reached\");\n                    }\n                }\n            }[\"useContractTender.useEffect.checkContractWithRetry\"];\n            // Запускаем первую проверку\n            checkContractWithRetry();\n            return ({\n                \"useContractTender.useEffect\": ()=>{\n                    isMounted = false;\n                }\n            })[\"useContractTender.useEffect\"];\n        }\n    }[\"useContractTender.useEffect\"], [\n        account,\n        contract,\n        isContractAvailable,\n        forceContractInitialization\n    ]);\n    // Get stable account reference\n    const signerAddress = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"useContractTender.useMemo[signerAddress]\": async ()=>{\n            if (!signer) return null;\n            try {\n                return await signer.getAddress();\n            } catch (error) {\n                console.error(\"Error getting signer address:\", error);\n                return null;\n            }\n        }\n    }[\"useContractTender.useMemo[signerAddress]\"], [\n        signer\n    ]);\n    // Create a non-async version for useEffect dependencies\n    const [signerAddressStr, setSignerAddressStr] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Update signerAddressStr when signerAddress promise resolves\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useContractTender.useEffect\": ()=>{\n            if (signer) {\n                signer.getAddress().then({\n                    \"useContractTender.useEffect\": (address)=>{\n                        setSignerAddressStr(address);\n                    }\n                }[\"useContractTender.useEffect\"]).catch({\n                    \"useContractTender.useEffect\": (error)=>{\n                        console.error(\"Failed to get signer address:\", error);\n                        setSignerAddressStr(null);\n                    }\n                }[\"useContractTender.useEffect\"]);\n            } else {\n                setSignerAddressStr(null);\n            }\n        }\n    }[\"useContractTender.useEffect\"], [\n        signer\n    ]);\n    // Store previous signer reference to prevent unnecessary reconnections\n    const previousSignerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    // Create stable checks that can be used in dependencies\n    const contractAvailable = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[contractAvailable]\": ()=>{\n            return !!contractRef.current && isContractAvailableRef.current;\n        }\n    }[\"useContractTender.useCallback[contractAvailable]\"], []);\n    // Common error check for all contract methods\n    const checkContractAvailability = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[checkContractAvailability]\": ()=>{\n            const available = isContractAvailableRef.current;\n            if (!available) {\n                const errorMsg = 'Contract is not available. Please connect your wallet.';\n                // Use type casting to fix the type mismatch\n                setError(errorMsg);\n                return {\n                    available: false,\n                    error: errorMsg\n                };\n            }\n            return {\n                available: true,\n                error: ''\n            };\n        }\n    }[\"useContractTender.useCallback[checkContractAvailability]\"], []);\n    // Общедоступная функция для проверки статуса контракта\n    const checkContractStatus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[checkContractStatus]\": async ()=>{\n            console.log(\"Manual contract status check requested\");\n            return forceContractInitialization();\n        }\n    }[\"useContractTender.useCallback[checkContractStatus]\"], [\n        forceContractInitialization\n    ]);\n    // Создание нового тендера\n    const createTender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[createTender]\": async (title, description, budget, deadline, distanceKm, weightKg, cargoType, urgencyDays, expirationMinutes = 10 // по умолчанию тендер действует 10 минут\n        )=>{\n            const { available, error: availabilityError } = checkContractAvailability();\n            if (!available) {\n                return {\n                    success: false,\n                    error: availabilityError\n                };\n            }\n            if (!signer) {\n                return {\n                    success: false,\n                    error: 'Wallet not connected'\n                };\n            }\n            setLoading(true);\n            setError(null);\n            try {\n                // For ethers v6, convert BigNumberish to number safely\n                const deadlineTimestamp = Number((0,ethers__WEBPACK_IMPORTED_MODULE_2__.getBigInt)(deadline)) * 1000;\n                const tx = await contractRef.current.createTender(title, description, budget, deadlineTimestamp, distanceKm, weightKg, cargoType, urgencyDays, expirationMinutes);\n                const receipt = await tx.wait();\n                // Получаем ID созданного тендера из события\n                const event = receipt.logs?.filter({\n                    \"useContractTender.useCallback[createTender]\": (log)=>log.fragment?.name === 'TenderCreated'\n                }[\"useContractTender.useCallback[createTender]\"])?.[0];\n                let tenderId;\n                if (event && event.args) {\n                    tenderId = event.args[0].toString();\n                } else {\n                    tenderId = 'fallback-id-' + Date.now();\n                }\n                return {\n                    success: true,\n                    data: {\n                        id: tenderId\n                    },\n                    hash: receipt.transactionHash\n                };\n            } catch (err) {\n                setError(err.message || 'Failed to create tender');\n                return {\n                    success: false,\n                    error: err.message || 'Failed to create tender'\n                };\n            } finally{\n                setLoading(false);\n            }\n        }\n    }[\"useContractTender.useCallback[createTender]\"], [\n        contractRef,\n        signer,\n        checkContractAvailability\n    ]);\n    // Получить тендер\n    const getTender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[getTender]\": async (id)=>{\n            console.log(`🔍 Attempting to get tender with ID: ${id}`);\n            // Check contract availability\n            const { available, error: availabilityError } = checkContractAvailability();\n            if (!available) {\n                console.error(`❌ Contract not available for getTender: ${availabilityError}`);\n                setError(availabilityError || 'Contract not available');\n                return {\n                    success: false,\n                    error: availabilityError || 'Contract not available',\n                    data: null\n                };\n            }\n            try {\n                console.log(`⏳ Fetching tender ${id} from contract...`);\n                const tenderData = await contractRef.current.getTender(id);\n                console.log(`📦 Raw tender data received:`, tenderData);\n                // Check if tender exists (in the contract, non-existent tenders have ID of 0)\n                if (tenderData.id.toString() === '0') {\n                    console.warn(`⚠️ Tender with ID ${id} does not exist in contract`);\n                    return {\n                        success: false,\n                        error: 'Tender does not exist',\n                        data: null\n                    };\n                }\n                try {\n                    // Instead of directly calling a function from dependencies, use inline conversion logic\n                    // This helps avoid the \"used before declaration\" error\n                    if (!tenderData) {\n                        throw new Error('Tender data is undefined');\n                    }\n                    // Map numeric status to TenderStatus type\n                    const statusMap = [\n                        'OPEN',\n                        'CLOSED',\n                        'AWARDED',\n                        'COMPLETED',\n                        'CANCELLED'\n                    ];\n                    const status = statusMap[Number(tenderData.status)] || 'OPEN';\n                    // Convert BigNumber values to regular numbers\n                    const adaptedTender = {\n                        id: tenderData.id.toString(),\n                        title: tenderData.title,\n                        description: tenderData.description,\n                        budget: tenderData.budget,\n                        deadline: tenderData.deadline,\n                        distance: Number(tenderData.distance),\n                        weight: Number(tenderData.weight),\n                        cargoType: tenderData.cargoType,\n                        urgencyDays: Number(tenderData.urgencyDays),\n                        creator: tenderData.creator,\n                        bidder: tenderData.bidder,\n                        status: status,\n                        createdAt: new Date(Number(tenderData.createdAt) * 1000).toISOString(),\n                        expiresAt: new Date(Number(tenderData.expiresAt) * 1000).toISOString(),\n                        timeLeft: Math.max(0, Math.floor((Number(tenderData.expiresAt) * 1000 - Date.now()) / 1000))\n                    };\n                    return {\n                        success: true,\n                        data: adaptedTender\n                    };\n                } catch (err) {\n                    console.error('Error parsing tender data:', err);\n                    return {\n                        success: false,\n                        error: `Error parsing tender data: ${err.message}`,\n                        data: null\n                    };\n                }\n            } catch (err) {\n                console.error(`❌ Error fetching tender ${id}:`, err);\n                // Check for specific \"Tender does not exist\" error\n                if (err.message && (err.message.includes('Tender does not exist') || err.reason && err.reason.includes('Tender does not exist'))) {\n                    console.warn(`⚠️ Contract confirmed tender ${id} does not exist`);\n                    return {\n                        success: false,\n                        error: 'Tender does not exist',\n                        data: null\n                    };\n                }\n                setError(err.message || 'Failed to fetch tender');\n                return {\n                    success: false,\n                    error: `Error fetching tender: ${err.message || 'Unknown error'}`,\n                    data: null\n                };\n            }\n        }\n    }[\"useContractTender.useCallback[getTender]\"], [\n        contractRef,\n        checkContractAvailability,\n        setError\n    ]);\n    // Функция получения активных тендеров\n    const getActiveTenders = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[getActiveTenders]\": async ()=>{\n            const now = Date.now();\n            console.log(`[getActiveTenders] Called at ${new Date(now).toISOString()}`);\n            console.log(`[getActiveTenders] Last call was ${now - lastGetActiveTendersCall.current}ms ago`);\n            console.log(`[getActiveTenders] IsLoadingTenders: ${isLoadingTenders.current}`);\n            console.log(`[getActiveTenders] Contract available: ${isContractAvailable}, Contract ref: ${!!contractRef.current}`);\n            // Implement proper debouncing\n            if (now - lastGetActiveTendersCall.current < 3000) {\n                console.log(\"[getActiveTenders] ⚠️ Debouncing - too soon after last call\");\n                return {\n                    success: false,\n                    error: \"Rate limited. Please wait before trying again.\",\n                    data: []\n                };\n            }\n            // Check if we're already fetching\n            if (isLoadingTenders.current) {\n                console.log(\"[getActiveTenders] ⚠️ Already fetching, skipping duplicate call\");\n                return {\n                    success: false,\n                    error: \"Request already in progress\",\n                    data: []\n                };\n            }\n            // Track this request\n            console.log(\"[getActiveTenders] ✅ Starting request\");\n            isLoadingTenders.current = true;\n            lastGetActiveTendersCall.current = now;\n            setLoading(true);\n            // Check contract availability before proceeding\n            const { available, error: availabilityError } = checkContractAvailability();\n            if (!available) {\n                console.log(`[getActiveTenders] ❌ Contract not available: ${availabilityError}`);\n                isLoadingTenders.current = false;\n                setLoading(false);\n                return {\n                    success: false,\n                    error: availabilityError || \"Contract not available\",\n                    data: []\n                };\n            }\n            try {\n                // Create a timeout promise\n                console.log(\"[getActiveTenders] Setting up timeout promise\");\n                const timeoutPromise = new Promise({\n                    \"useContractTender.useCallback[getActiveTenders]\": (_, reject)=>{\n                        setTimeout({\n                            \"useContractTender.useCallback[getActiveTenders]\": ()=>reject(new Error(\"Timeout fetching active tenders\"))\n                        }[\"useContractTender.useCallback[getActiveTenders]\"], 15000);\n                    }\n                }[\"useContractTender.useCallback[getActiveTenders]\"]);\n                // Race the contract call against the timeout\n                console.log(\"[getActiveTenders] Making contract call\");\n                const activeTenderIds = await Promise.race([\n                    contractRef.current.getActiveTenders(),\n                    timeoutPromise\n                ]);\n                console.log(`[getActiveTenders] Received ${activeTenderIds?.length || 0} tender IDs`);\n                if (!activeTenderIds || activeTenderIds.length === 0) {\n                    console.log(\"[getActiveTenders] No active tenders found\");\n                    isLoadingTenders.current = false;\n                    setLoading(false);\n                    return {\n                        success: true,\n                        data: []\n                    };\n                }\n                console.log(`[getActiveTenders] Fetching details for ${activeTenderIds.length} tenders`);\n                const tenderPromises = activeTenderIds.filter({\n                    \"useContractTender.useCallback[getActiveTenders].tenderPromises\": (id)=>id !== null && id !== undefined\n                }[\"useContractTender.useCallback[getActiveTenders].tenderPromises\"]).map({\n                    \"useContractTender.useCallback[getActiveTenders].tenderPromises\": (id)=>{\n                        const idString = id.toString();\n                        console.log(`[getActiveTenders] Fetching tender ${idString}`);\n                        return contractRef.current.getTender(idString);\n                    }\n                }[\"useContractTender.useCallback[getActiveTenders].tenderPromises\"]);\n                const tendersData = await Promise.all(tenderPromises);\n                console.log(`[getActiveTenders] Received ${tendersData.length} tender details`);\n                const tenders = tendersData.map({\n                    \"useContractTender.useCallback[getActiveTenders].tenders\": (tenderData)=>{\n                        console.log(`[getActiveTenders] Processing tender ${tenderData.id.toString()}`);\n                        return {\n                            id: tenderData.id.toString(),\n                            title: tenderData.title,\n                            description: tenderData.description,\n                            budget: tenderData.budget,\n                            deadline: tenderData.deadline,\n                            distance: Number(tenderData.distance),\n                            weight: Number(tenderData.weight),\n                            cargoType: tenderData.cargoType,\n                            urgencyDays: Number(tenderData.urgencyDays),\n                            creator: tenderData.creator,\n                            bidder: tenderData.bidder,\n                            status: [\n                                'OPEN',\n                                'CLOSED',\n                                'AWARDED',\n                                'COMPLETED',\n                                'CANCELLED'\n                            ][Number(tenderData.status)],\n                            createdAt: new Date(Number(tenderData.createdAt) * 1000).toISOString(),\n                            expiresAt: new Date(Number(tenderData.expiresAt) * 1000).toISOString()\n                        };\n                    }\n                }[\"useContractTender.useCallback[getActiveTenders].tenders\"]);\n                // Добавление времени до истечения срока\n                const currentTime = Math.floor(Date.now() / 1000);\n                tenders.forEach({\n                    \"useContractTender.useCallback[getActiveTenders]\": (tender)=>{\n                        const expiresAt = Math.floor(new Date(tender.expiresAt).getTime() / 1000);\n                        tender.timeLeft = expiresAt > currentTime ? expiresAt - currentTime : 0;\n                    }\n                }[\"useContractTender.useCallback[getActiveTenders]\"]);\n                console.log(`[getActiveTenders] ✅ Completed successfully with ${tenders.length} tenders`);\n                return {\n                    success: true,\n                    data: tenders\n                };\n            } catch (err) {\n                console.error('[getActiveTenders] ❌ Error:', err);\n                setError(err.message || 'Failed to get active tenders');\n                return {\n                    success: false,\n                    error: err.message || 'Failed to get active tenders',\n                    data: []\n                };\n            } finally{\n                console.log(\"[getActiveTenders] Request complete, cleaning up\");\n                isLoadingTenders.current = false;\n                setLoading(false);\n            }\n        }\n    }[\"useContractTender.useCallback[getActiveTenders]\"], [\n        contractRef,\n        checkContractAvailability\n    ]);\n    // \"Забрать\" тендер\n    const takeTender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[takeTender]\": async (id)=>{\n            const { available, error: availabilityError } = checkContractAvailability();\n            if (!available) {\n                return {\n                    success: false,\n                    error: availabilityError\n                };\n            }\n            if (!signer) {\n                return {\n                    success: false,\n                    error: 'Wallet not connected'\n                };\n            }\n            setLoading(true);\n            setError(null);\n            try {\n                const tx = await contractRef.current.takeTender(id);\n                const receipt = await tx.wait();\n                return {\n                    success: true,\n                    hash: receipt.transactionHash\n                };\n            } catch (err) {\n                console.error('Error taking tender:', err);\n                setError(err.message || 'Failed to take tender');\n                return {\n                    success: false,\n                    error: err.message || 'Failed to take tender'\n                };\n            } finally{\n                setLoading(false);\n            }\n        }\n    }[\"useContractTender.useCallback[takeTender]\"], [\n        contractRef,\n        signer,\n        checkContractAvailability\n    ]);\n    // Helper function to check if a tender exists in the blockchain without throwing errors\n    const checkTenderExists = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[checkTenderExists]\": async (tenderId)=>{\n            try {\n                console.log(`🔍 Checking if tender ${tenderId} exists in blockchain...`);\n                // Make a safe call that catches the revert error\n                try {\n                    const tenderResponse = await getTender(tenderId);\n                    return tenderResponse.success && !!tenderResponse.data; // True if the request was successful and data exists\n                } catch (error) {\n                    // If we get here, the contract call itself threw an error\n                    console.error(`❌ Contract error checking tender existence:`, error);\n                    // Check if the error is specifically about tender not existing\n                    if (error.message && (error.message.includes('Tender does not exist') || error.reason && error.reason.includes('Tender does not exist'))) {\n                        console.warn(`⚠️ Caught 'Tender does not exist' error - tender ${tenderId} confirmed not to exist`);\n                        return false; // Tender definitely doesn't exist\n                    }\n                    // For other errors, it's safer to fail the check\n                    return false;\n                }\n            } catch (error) {\n                console.error(`❌ Error in checkTenderExists wrapper:`, error);\n                return false;\n            }\n        }\n    }[\"useContractTender.useCallback[checkTenderExists]\"], [\n        getTender\n    ]);\n    // Submit bid function with retry and better error handling\n    const submitBid = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[submitBid]\": async (tenderId, amount, proposal)=>{\n            const { available, error: availabilityError } = checkContractAvailability();\n            if (!available) {\n                return {\n                    success: false,\n                    error: availabilityError\n                };\n            }\n            if (!signer) {\n                return {\n                    success: false,\n                    error: 'Wallet not connected'\n                };\n            }\n            setLoading(true);\n            setError(null);\n            try {\n                console.log(`🔍 Checking if tender ${tenderId} exists before submitting bid...`);\n                // First check if the tender exists to avoid the \"Tender does not exist\" error\n                const tenderExists = await checkTenderExists(tenderId);\n                if (!tenderExists) {\n                    const errorMsg = `Tender with ID ${tenderId} does not exist in the blockchain. It may have been removed or never existed.`;\n                    console.error(`❌ ${errorMsg}`);\n                    return {\n                        success: false,\n                        error: errorMsg\n                    };\n                }\n                console.log(`💸 Taking tender ${tenderId}...`);\n                // Call takeTender instead of submitBid since that's what our contract actually has\n                const tx = await contractRef.current.takeTender(tenderId);\n                console.log(`📝 Tender taking transaction sent: ${tx.hash}`);\n                console.log(`⏱️ Waiting for transaction confirmation...`);\n                const receipt = await tx.wait();\n                console.log(`✅ Tender taken confirmed in block ${receipt.blockNumber}`);\n                return {\n                    success: true,\n                    data: {\n                        hash: receipt.hash\n                    },\n                    hash: receipt.hash\n                };\n            } catch (err) {\n                console.error(`❌ Error taking tender:`, err);\n                // Check for specific error types\n                let errorMessage = '';\n                if (err.code === 'CALL_EXCEPTION' || err.code === 'UNPREDICTABLE_GAS_LIMIT') {\n                    // Contract execution error\n                    if (err.reason) {\n                        errorMessage = `Contract error: ${err.reason}`;\n                    } else if (err.message && err.message.includes('Tender does not exist')) {\n                        errorMessage = 'Tender does not exist';\n                    } else if (err.message && err.message.includes('Cannot take your own tender')) {\n                        errorMessage = 'You cannot take your own tender';\n                    } else if (err.message && err.message.includes('Tender is not open')) {\n                        errorMessage = 'Tender is not open for taking';\n                    } else if (err.message && err.message.includes('Tender has expired')) {\n                        errorMessage = 'Tender has expired';\n                    } else {\n                        errorMessage = `Contract execution failed: ${err.message}`;\n                    }\n                } else if (err.code === 'ACTION_REJECTED') {\n                    // User rejected transaction\n                    errorMessage = 'Transaction rejected by user';\n                } else if (err.code === 'INSUFFICIENT_FUNDS') {\n                    // Insufficient funds\n                    errorMessage = 'Insufficient funds for transaction';\n                } else if (err.message) {\n                    // Generic error with message\n                    errorMessage = err.message;\n                } else {\n                    // Unknown error\n                    errorMessage = 'Unknown error taking tender';\n                }\n                setError(errorMessage);\n                return {\n                    success: false,\n                    error: errorMessage\n                };\n            } finally{\n                setLoading(false);\n            }\n        }\n    }[\"useContractTender.useCallback[submitBid]\"], [\n        checkContractAvailability,\n        signer,\n        contractRef,\n        checkTenderExists\n    ]);\n    // Получить все заявки на тендер (адаптировано для контракта без getBidsForTender)\n    const getBidsForTender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[getBidsForTender]\": async (id)=>{\n            console.log(`⚠️ getBidsForTender called for tender ${id}, but this contract doesn't support listing bids`);\n            // Check if we can at least get the tender to see if there's a bidder assigned\n            const { available, error: availabilityError } = checkContractAvailability();\n            if (!available) {\n                return {\n                    success: false,\n                    error: `Contract not available: ${availabilityError}. Note: This contract doesn't support listing bids.`\n                };\n            }\n            setLoading(true);\n            setError(null);\n            try {\n                // Try to get the tender to check if there's a bidder\n                const tender = await contractRef.current.getTender(id);\n                if (tender && tender.bidder && tender.bidder !== '0x0000000000000000000000000000000000000000') {\n                    // If there's a bidder, create a single mock bid entry\n                    const mockBid = {\n                        id: '1',\n                        bidder: tender.bidder,\n                        amount: 0,\n                        timestamp: new Date(Number(tender.createdAt) * 1000).toISOString(),\n                        status: tender.status === 2 ? 'ACCEPTED' : 'PENDING' // 2 is AWARDED in enum\n                    };\n                    return {\n                        success: true,\n                        data: [\n                            mockBid\n                        ],\n                        error: 'Note: This contract only shows the assigned bidder, not all bids'\n                    };\n                }\n                return {\n                    success: true,\n                    data: [],\n                    error: 'Note: This contract doesn\\'t support listing all bids'\n                };\n            } catch (err) {\n                console.error('Error getting tender for bid info:', err);\n                setError(err.message || 'Failed to get bids (not supported by this contract)');\n                return {\n                    success: false,\n                    error: err.message || 'Failed to get bids (not supported by this contract)',\n                    data: []\n                };\n            } finally{\n                setLoading(false);\n            }\n        }\n    }[\"useContractTender.useCallback[getBidsForTender]\"], [\n        contractRef,\n        checkContractAvailability\n    ]);\n    // Завершить тендер\n    const completeTender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[completeTender]\": async (id)=>{\n            const { available, error: availabilityError } = checkContractAvailability();\n            if (!available) {\n                return {\n                    success: false,\n                    error: availabilityError\n                };\n            }\n            if (!signer) {\n                return {\n                    success: false,\n                    error: 'Wallet not connected'\n                };\n            }\n            setLoading(true);\n            setError(null);\n            try {\n                const tx = await contractRef.current.completeTender(id);\n                const receipt = await tx.wait();\n                return {\n                    success: true,\n                    hash: receipt.transactionHash\n                };\n            } catch (err) {\n                console.error('Error completing tender:', err);\n                setError(err.message || 'Failed to complete tender');\n                return {\n                    success: false,\n                    error: err.message || 'Failed to complete tender'\n                };\n            } finally{\n                setLoading(false);\n            }\n        }\n    }[\"useContractTender.useCallback[completeTender]\"], [\n        contractRef,\n        signer,\n        checkContractAvailability\n    ]);\n    // Отменить тендер\n    const cancelTender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[cancelTender]\": async (id)=>{\n            const { available, error: availabilityError } = checkContractAvailability();\n            if (!available) {\n                return {\n                    success: false,\n                    error: availabilityError\n                };\n            }\n            if (!signer) {\n                return {\n                    success: false,\n                    error: 'Wallet not connected'\n                };\n            }\n            setLoading(true);\n            setError(null);\n            try {\n                const tx = await contractRef.current.cancelTender(id);\n                const receipt = await tx.wait();\n                return {\n                    success: true,\n                    hash: receipt.transactionHash\n                };\n            } catch (err) {\n                console.error('Error cancelling tender:', err);\n                setError(err.message || 'Failed to cancel tender');\n                return {\n                    success: false,\n                    error: err.message || 'Failed to cancel tender'\n                };\n            } finally{\n                setLoading(false);\n            }\n        }\n    }[\"useContractTender.useCallback[cancelTender]\"], [\n        contractRef,\n        signer,\n        checkContractAvailability\n    ]);\n    // Add a helper function to add Hardhat network to MetaMask\n    const addHardhatNetworkToMetaMask = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[addHardhatNetworkToMetaMask]\": async ()=>{\n            if (true) {\n                console.error('❌ window.ethereum is not available');\n                return false;\n            }\n            try {\n                console.log('🔄 Adding Hardhat local network to MetaMask...');\n                await window.ethereum.request({\n                    method: 'wallet_addEthereumChain',\n                    params: [\n                        {\n                            chainId: '0x7a69',\n                            chainName: 'Hardhat Local',\n                            nativeCurrency: {\n                                name: 'ETH',\n                                symbol: 'ETH',\n                                decimals: 18\n                            },\n                            rpcUrls: [\n                                'http://127.0.0.1:8545/'\n                            ],\n                            blockExplorerUrls: null\n                        }\n                    ]\n                });\n                console.log('✅ Added Hardhat local network to MetaMask');\n                // Try to switch to the Hardhat network\n                await window.ethereum.request({\n                    method: 'wallet_switchEthereumChain',\n                    params: [\n                        {\n                            chainId: '0x7a69'\n                        }\n                    ]\n                });\n                console.log('✅ Switched to Hardhat local network');\n                return true;\n            } catch (error) {\n                console.error('❌ Failed to add Hardhat network to MetaMask:', error);\n                return false;\n            }\n        }\n    }[\"useContractTender.useCallback[addHardhatNetworkToMetaMask]\"], []);\n    // Получить количество тендеров в контракте\n    const getTenderCount = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[getTenderCount]\": async ()=>{\n            const { available, error: availabilityError } = checkContractAvailability();\n            if (!available) {\n                console.error(\"Contract not available for getTenderCount:\", availabilityError);\n                return \"0\";\n            }\n            try {\n                console.log(\"Getting tender count from contract\");\n                const count = await contractRef.current.tenderCount();\n                console.log(\"Current tender count:\", count.toString());\n                return count.toString();\n            } catch (err) {\n                console.error('Error getting tender count:', err);\n                return \"0\";\n            }\n        }\n    }[\"useContractTender.useCallback[getTenderCount]\"], [\n        contractRef,\n        checkContractAvailability\n    ]);\n    // Migrate a tender from database to blockchain\n    const migrateTenderToBlockchain = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useContractTender.useCallback[migrateTenderToBlockchain]\": async (tenderId, title, description, budget, deadline, status)=>{\n            console.log(`🔄 Migrating tender ${tenderId} to blockchain...`);\n            // Check contract availability\n            const { available, error: availabilityError } = checkContractAvailability();\n            if (!available) {\n                return {\n                    success: false,\n                    error: availabilityError\n                };\n            }\n            // Check if wallet is connected\n            if (!signer) {\n                return {\n                    success: false,\n                    error: 'Wallet not connected'\n                };\n            }\n            setLoading(true);\n            setError(null);\n            try {\n                // Convert status string to contract enum value\n                const statusMap = {\n                    'OPEN': 0,\n                    'CLOSED': 1,\n                    'AWARDED': 2,\n                    'COMPLETED': 3,\n                    'CANCELLED': 4\n                };\n                const statusValue = statusMap[status] || 0;\n                // Format deadline to UTC timestamp if it's not already a number\n                let deadlineTimestamp;\n                if (typeof deadline === 'string') {\n                    deadlineTimestamp = Math.floor(new Date(deadline).getTime() / 1000);\n                } else if (typeof deadline === 'bigint') {\n                    deadlineTimestamp = Number(deadline);\n                } else {\n                    deadlineTimestamp = Number(deadline);\n                }\n                // Create the tender in the blockchain\n                console.log(`Creating tender in blockchain with: title=${title}, budget=${budget}, deadline=${deadlineTimestamp}`);\n                const tx = await contractRef.current.createTender(title, description, budget, deadlineTimestamp, 0, 0, 'General', 7 // Default urgencyDays\n                );\n                const receipt = await tx.wait();\n                console.log('Transaction receipt:', receipt);\n                // Get the tender ID from events or last tender count\n                const tenderCount = await contractRef.current.tenderCount();\n                const newTenderId = (tenderCount - 1).toString();\n                console.log(`✅ Tender migrated to blockchain with ID: ${newTenderId}`);\n                return {\n                    success: true,\n                    data: {\n                        id: newTenderId\n                    },\n                    hash: receipt.transactionHash\n                };\n            } catch (err) {\n                console.error('❌ Error migrating tender to blockchain:', err);\n                const errorMessage = err.message || 'Failed to migrate tender to blockchain';\n                setError(errorMessage);\n                return {\n                    success: false,\n                    error: errorMessage\n                };\n            } finally{\n                setLoading(false);\n            }\n        }\n    }[\"useContractTender.useCallback[migrateTenderToBlockchain]\"], [\n        contractRef,\n        signer,\n        checkContractAvailability\n    ]);\n    return {\n        loading,\n        error,\n        isContractAvailable,\n        contractStatus,\n        contractErrorDetails,\n        createTender,\n        getTender,\n        getActiveTenders,\n        takeTender,\n        completeTender,\n        cancelTender,\n        submitBid,\n        getBidsForTender,\n        checkContractStatus,\n        forceContractInitialization,\n        addHardhatNetworkToMetaMask,\n        getTenderCount,\n        migrateTenderToBlockchain\n    };\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./hooks/useContractTender.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./hooks/useTenderAPI.ts":
/*!*******************************!*\
  !*** ./hooks/useTenderAPI.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n// The shared singleton instance\nlet SINGLETON_INSTANCE = null;\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3000/api';\n// Custom error class for request timeouts\nclass RequestTimeoutError extends Error {\n    constructor(message){\n        super(message);\n        this.name = 'RequestTimeoutError';\n    }\n}\n// Constants for API requests\nconst API_TIMEOUT = 30000; // 30 seconds\nconst MAX_RETRIES = 2;\n// Кеширование результатов запросов\nconst cache = new Map();\nconst CACHE_TTL = 1000 * 60; // 1 минута\n// Мок-данные для случаев, когда API недоступен\nconst MOCK_DATA = {\n    tenders: [\n        {\n            id: 'mock-1',\n            title: 'Демо тендер #1 - API недоступен',\n            description: 'Расстояние: 1000 км, Вес: 500 кг, Тип груза: perishable, Срок доставки: 3 дня',\n            budget: 1500,\n            deadline: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),\n            status: 'OPEN',\n            createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n            updatedAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n            creatorId: '1',\n            creator: {\n                id: '1',\n                name: 'Демо пользователь',\n                email: 'demo@example.com',\n                walletAddress: '0x123456789abcdef',\n                createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString()\n            },\n            categories: [\n                {\n                    id: '1',\n                    name: 'perishable',\n                    createdAt: new Date().toISOString()\n                }\n            ],\n            expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString()\n        },\n        {\n            id: 'mock-2',\n            title: 'Демо тендер #2 - API недоступен',\n            description: 'Расстояние: 500 км, Вес: 1000 кг, Тип груза: general, Срок доставки: 5 дней',\n            budget: 2000,\n            deadline: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000).toISOString(),\n            status: 'OPEN',\n            createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),\n            updatedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),\n            creatorId: '2',\n            creator: {\n                id: '2',\n                name: 'Демо пользователь 2',\n                email: 'demo2@example.com',\n                walletAddress: '0x987654321fedcba',\n                createdAt: new Date(Date.now() - 25 * 24 * 60 * 60 * 1000).toISOString()\n            },\n            categories: [\n                {\n                    id: '2',\n                    name: 'general',\n                    createdAt: new Date().toISOString()\n                }\n            ],\n            expiresAt: new Date(Date.now() + 48 * 60 * 60 * 1000).toISOString()\n        }\n    ],\n    bids: [\n        {\n            id: 'mock-bid-1',\n            amount: 1400,\n            proposal: 'Демо заявка на тендер #1',\n            status: 'PENDING',\n            createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),\n            updatedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),\n            tenderId: 'mock-1',\n            bidderId: '3',\n            bidder: {\n                id: '3',\n                name: 'Демо участник',\n                email: 'bidder@example.com',\n                walletAddress: '0xabcdef123456789',\n                createdAt: new Date(Date.now() - 20 * 24 * 60 * 60 * 1000).toISOString()\n            }\n        }\n    ]\n};\n// Использовать ли мок-данные при ошибках API\nconst USE_MOCK_DATA_ON_ERROR = true;\n// Helper function to create a fetch request with timeout\nconst fetchWithTimeout = async (url, fetchOptions, timeoutMs = 30000)=>{\n    const controller = new AbortController();\n    const signal = controller.signal;\n    let timeoutId = null;\n    try {\n        // Create a promise that rejects on timeout\n        const timeoutPromise = new Promise((_, reject)=>{\n            timeoutId = setTimeout(()=>{\n                controller.abort('Request timeout');\n                reject(new RequestTimeoutError(`Request timed out after ${timeoutMs}ms`));\n            }, timeoutMs);\n        });\n        // Wrapping the fetch in a try/catch to handle network errors\n        const fetchPromise = fetch(url, {\n            ...fetchOptions,\n            signal\n        });\n        // Race the fetch against the timeout\n        return await Promise.race([\n            fetchPromise,\n            timeoutPromise\n        ]);\n    } finally{\n        // Always clean up the timeout to prevent memory leaks\n        if (timeoutId) clearTimeout(timeoutId);\n    }\n};\n// Helper function to get mock tenders for development and testing\nconst getMockTenders = ()=>{\n    return [\n        {\n            id: 'mock-tender-1',\n            title: 'Transport Refrigerated Goods',\n            description: 'Need temperature-controlled transportation for perishable items from warehouse to distribution centers.',\n            budget: 3000,\n            deadline: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),\n            status: 'OPEN',\n            createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),\n            updatedAt: new Date().toISOString(),\n            creatorId: 'mock-user-1',\n            creator: {\n                id: 'mock-user-1',\n                name: 'Supply Chain Corp',\n                email: 'supply@example.com',\n                walletAddress: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n                createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString()\n            },\n            categories: [\n                {\n                    id: 'cat-1',\n                    name: 'Transportation',\n                    createdAt: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString()\n                },\n                {\n                    id: 'cat-2',\n                    name: 'Cold Chain',\n                    createdAt: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString()\n                }\n            ],\n            bids: []\n        },\n        {\n            id: 'mock-tender-2',\n            title: 'Last Mile Delivery Partners',\n            description: 'Seeking local delivery partners for last-mile delivery in urban areas.',\n            budget: 5000,\n            deadline: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString(),\n            status: 'OPEN',\n            createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\n            updatedAt: new Date().toISOString(),\n            creatorId: 'mock-user-2',\n            creator: {\n                id: 'mock-user-2',\n                name: 'E-Commerce Solutions',\n                email: 'ecommerce@example.com',\n                walletAddress: '0x70997970C51812dc3A010C7d01b50e0d17dc79C8',\n                createdAt: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString()\n            },\n            categories: [\n                {\n                    id: 'cat-1',\n                    name: 'Transportation',\n                    createdAt: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString()\n                },\n                {\n                    id: 'cat-3',\n                    name: 'Urban Delivery',\n                    createdAt: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString()\n                }\n            ],\n            bids: []\n        }\n    ];\n};\n// Helper function to get mock bids for development and testing\nconst getMockBids = (tenderId)=>{\n    return [\n        {\n            id: `mock-bid-1-${tenderId}`,\n            amount: 2800,\n            proposal: \"We offer same-day temperature-controlled delivery with real-time tracking.\",\n            status: 'PENDING',\n            createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n            updatedAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n            tenderId: tenderId,\n            bidderId: 'mock-bidder-1',\n            bidder: {\n                id: 'mock-bidder-1',\n                name: 'Cold Transport Inc',\n                email: 'transport@example.com',\n                walletAddress: '0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC',\n                createdAt: new Date(Date.now() - 45 * 24 * 60 * 60 * 1000).toISOString()\n            }\n        },\n        {\n            id: `mock-bid-2-${tenderId}`,\n            amount: 3100,\n            proposal: \"Our fleet of refrigerated trucks ensures your goods arrive in perfect condition.\",\n            status: 'PENDING',\n            createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),\n            updatedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),\n            tenderId: tenderId,\n            bidderId: 'mock-bidder-2',\n            bidder: {\n                id: 'mock-bidder-2',\n                name: 'Premium Logistics',\n                email: 'logistics@example.com',\n                walletAddress: '0x90F79bf6EB2c4f870365E785982E1f101E93b906',\n                createdAt: new Date(Date.now() - 35 * 24 * 60 * 60 * 1000).toISOString()\n            }\n        }\n    ];\n};\n// Main API implementation as a factory function\nconst createTenderAPI = ()=>{\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const useMockDataFromEnv = process.env.NEXT_PUBLIC_USE_MOCK_DATA === 'true';\n    const [useMockData, setUseMockData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(useMockDataFromEnv);\n    // Log initial state\n    console.log(`TenderAPI instance created with mock data ${useMockData ? 'enabled' : 'disabled'} (env: ${useMockDataFromEnv})`);\n    const handleRequest = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"createTenderAPI.useCallback[handleRequest]\": async (endpoint, options = {}, retry = 0)=>{\n            setLoading(true);\n            setError(null);\n            // Early return for mock data if enabled\n            if (useMockData) {\n                console.log(`Using mock data for ${endpoint} (mock mode enabled)`);\n                if (endpoint === '/tenders') {\n                    setLoading(false);\n                    return {\n                        data: getMockTenders(),\n                        error: null,\n                        loading: false\n                    };\n                }\n                if (endpoint.includes('/tenders/') && endpoint.includes('/bids')) {\n                    const tenderId = endpoint.split('/')[2];\n                    console.log(`Getting mock bids for tender: ${tenderId}`);\n                    setLoading(false);\n                    return {\n                        data: getMockBids(tenderId),\n                        error: null,\n                        loading: false\n                    };\n                }\n                // For specific tender details\n                if (endpoint.startsWith('/tenders/') && !endpoint.includes('/bids')) {\n                    const tenderId = endpoint.split('/')[2];\n                    const allTenders = getMockTenders();\n                    const tender = allTenders.find({\n                        \"createTenderAPI.useCallback[handleRequest].tender\": (t)=>t.id === tenderId\n                    }[\"createTenderAPI.useCallback[handleRequest].tender\"]);\n                    if (tender) {\n                        setLoading(false);\n                        return {\n                            data: tender,\n                            error: null,\n                            loading: false\n                        };\n                    }\n                }\n            }\n            try {\n                console.log(`Making API request to ${endpoint}:`, options);\n                // Add default headers for JSON requests\n                const fetchOptions = {\n                    ...options,\n                    headers: {\n                        ...options.headers,\n                        'Content-Type': 'application/json'\n                    }\n                };\n                // Fetch with timeout\n                const response = await fetchWithTimeout(`${API_BASE_URL}${endpoint}`, fetchOptions, API_TIMEOUT);\n                // Check if response is OK\n                if (!response.ok) {\n                    // Handle 404 errors differently - they're expected sometimes\n                    if (response.status === 404) {\n                        console.log(`Resource not found at ${endpoint}. This might be expected.`);\n                        // Return empty data rather than treating as error for 404\n                        return {\n                            data: null,\n                            error: null,\n                            loading: false\n                        };\n                    }\n                    // Handle 500 errors by using mock data\n                    if (response.status === 500) {\n                        console.log(`Server error (500) for ${endpoint}. Falling back to mock data.`);\n                        // Switch to mock data mode if not already enabled\n                        if (!useMockData) {\n                            setUseMockData(true);\n                        }\n                        // Return appropriate mock data based on the endpoint\n                        if (endpoint === '/tenders') {\n                            setLoading(false);\n                            return {\n                                data: getMockTenders(),\n                                error: null,\n                                loading: false\n                            };\n                        }\n                        if (endpoint.includes('/tenders/') && endpoint.includes('/bids')) {\n                            const tenderId = endpoint.split('/')[2];\n                            console.log(`Getting mock bids for tender (500 error): ${tenderId}`);\n                            setLoading(false);\n                            return {\n                                data: getMockBids(tenderId),\n                                error: null,\n                                loading: false\n                            };\n                        }\n                        // For specific tender details\n                        if (endpoint.startsWith('/tenders/') && !endpoint.includes('/bids')) {\n                            const tenderId = endpoint.split('/')[2];\n                            const allTenders = getMockTenders();\n                            const tender = allTenders.find({\n                                \"createTenderAPI.useCallback[handleRequest].tender\": (t)=>t.id === tenderId\n                            }[\"createTenderAPI.useCallback[handleRequest].tender\"]);\n                            if (tender) {\n                                setLoading(false);\n                                return {\n                                    data: tender,\n                                    error: null,\n                                    loading: false\n                                };\n                            }\n                        }\n                    }\n                    // General error fallback - use mock data in development or if mock mode is enabled\n                    if (true) {\n                        console.log(`HTTP Error (${response.status}) for ${endpoint}. Using mock data as fallback.`);\n                        // Switch to mock data mode if not already enabled\n                        if (!useMockData) {\n                            setUseMockData(true);\n                        }\n                        // Return appropriate mock data based on the endpoint\n                        if (endpoint === '/tenders') {\n                            setLoading(false);\n                            return {\n                                data: getMockTenders(),\n                                error: null,\n                                loading: false\n                            };\n                        }\n                        if (endpoint.includes('/tenders/') && endpoint.includes('/bids')) {\n                            const tenderId = endpoint.split('/')[2];\n                            console.log(`Getting mock bids for tender (HTTP error): ${tenderId}`);\n                            setLoading(false);\n                            return {\n                                data: getMockBids(tenderId),\n                                error: null,\n                                loading: false\n                            };\n                        }\n                        // For specific tender details\n                        if (endpoint.startsWith('/tenders/') && !endpoint.includes('/bids')) {\n                            const tenderId = endpoint.split('/')[2];\n                            const allTenders = getMockTenders();\n                            const tender = allTenders.find({\n                                \"createTenderAPI.useCallback[handleRequest].tender\": (t)=>t.id === tenderId\n                            }[\"createTenderAPI.useCallback[handleRequest].tender\"]);\n                            if (tender) {\n                                setLoading(false);\n                                return {\n                                    data: tender,\n                                    error: null,\n                                    loading: false\n                                };\n                            }\n                        }\n                    }\n                    throw new Error(`API error: ${response.status} ${response.statusText}`);\n                }\n                // Check content type to ensure we're getting JSON\n                const contentType = response.headers.get('content-type');\n                if (!contentType || !contentType.includes('application/json')) {\n                    console.error('API returned non-JSON content type:', contentType);\n                    try {\n                        // Try to see what was returned\n                        const text = await response.text();\n                        console.log('API response text:', text.substring(0, 200) + '...');\n                        // Show more detailed error in development\n                        if (true) {\n                            console.log('Development environment detected, showing detailed error');\n                            // Check if it's an HTML response (typically 404/500 error pages)\n                            if (text.includes('<!DOCTYPE html>')) {\n                                console.error('API returned an HTML page instead of JSON data');\n                                // In development, we'll use mock data instead\n                                console.log('Switching to mock data due to HTML response');\n                                if (!useMockData) {\n                                    setUseMockData(true);\n                                }\n                                // Return mock data\n                                if (endpoint.includes('/tenders') && !endpoint.includes('/bids')) {\n                                    // For tender endpoints, return mock tenders\n                                    return {\n                                        data: getMockTenders(),\n                                        error: null,\n                                        loading: false\n                                    };\n                                } else if (endpoint.includes('/bids')) {\n                                    // For bid endpoints, return mock bids\n                                    return {\n                                        data: getMockBids(endpoint.split('/')[2]),\n                                        error: null,\n                                        loading: false\n                                    };\n                                }\n                            }\n                        }\n                        throw new Error('Response is not JSON. API returned: ' + contentType);\n                    } catch (textError) {\n                        throw new Error(`Failed to parse response: ${textError}`);\n                    }\n                }\n                // Parse JSON response\n                const data = await response.json();\n                // API response with proper structure\n                console.log(`API response from ${endpoint}:`, {\n                    status: response.status,\n                    ok: response.ok,\n                    data: data\n                });\n                return {\n                    data,\n                    error: null,\n                    loading: false\n                };\n            } catch (error) {\n                let errorMessage = error.message || 'Unknown error';\n                // Network errors (like CORS, connection refused, etc.)\n                if (error instanceof TypeError && error.message.includes('fetch')) {\n                    errorMessage = `Network error: ${error.message}`;\n                    console.error(`Network error for ${endpoint}:`, error);\n                } else if (error instanceof RequestTimeoutError) {\n                    errorMessage = `Request timed out after ${API_TIMEOUT}ms`;\n                    console.error(`Timeout for ${endpoint}:`, error);\n                } else {\n                    console.error(`API error for ${endpoint}:`, error);\n                }\n                // Retry logic for certain errors (not 4xx client errors)\n                if (retry < MAX_RETRIES && !errorMessage.includes('API error: 4')) {\n                    console.log(`Retrying request to ${endpoint} (attempt ${retry + 1}/${MAX_RETRIES})`);\n                    return handleRequest(endpoint, options, retry + 1);\n                }\n                // Return mock data in development mode if API fails\n                if (true) {\n                    console.log(`Using mock data for ${endpoint} due to API error`);\n                    // Toggle mock data mode if not already on\n                    if (!useMockData) {\n                        setUseMockData(true);\n                    }\n                    // Return appropriate mock data based on the endpoint\n                    if (endpoint === '/tenders') {\n                        setLoading(false);\n                        return {\n                            data: getMockTenders(),\n                            error: null,\n                            loading: false\n                        };\n                    }\n                    if (endpoint.includes('/tenders/') && endpoint.includes('/bids')) {\n                        const tenderId = endpoint.split('/')[2];\n                        console.log(`Getting mock bids for tender (error case): ${tenderId}`);\n                        setLoading(false);\n                        return {\n                            data: getMockBids(tenderId),\n                            error: null,\n                            loading: false\n                        };\n                    }\n                    // For specific tender details\n                    if (endpoint.startsWith('/tenders/') && !endpoint.includes('/bids')) {\n                        const tenderId = endpoint.split('/')[2];\n                        const allTenders = getMockTenders();\n                        const tender = allTenders.find({\n                            \"createTenderAPI.useCallback[handleRequest].tender\": (t)=>t.id === tenderId\n                        }[\"createTenderAPI.useCallback[handleRequest].tender\"]);\n                        if (tender) {\n                            setLoading(false);\n                            return {\n                                data: tender,\n                                error: null,\n                                loading: false\n                            };\n                        }\n                    }\n                }\n                setError(errorMessage);\n                return {\n                    data: null,\n                    error: errorMessage,\n                    loading: false\n                };\n            } finally{\n                setLoading(false);\n            }\n        }\n    }[\"createTenderAPI.useCallback[handleRequest]\"], [\n        API_BASE_URL,\n        useMockData\n    ]);\n    const getTenders = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"createTenderAPI.useCallback[getTenders]\": async ()=>{\n            return handleRequest('/tenders');\n        }\n    }[\"createTenderAPI.useCallback[getTenders]\"], [\n        handleRequest\n    ]);\n    const getTenderById = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"createTenderAPI.useCallback[getTenderById]\": async (id)=>{\n            // Check cache\n            const now = Date.now();\n            const cacheKey = `/tenders/${id}`;\n            const cachedData = cache.get(cacheKey);\n            // If data exists in cache and isn't stale, return it\n            if (cachedData && now - cachedData.timestamp < CACHE_TTL) {\n                console.log('Using cached data for tender:', id);\n                return {\n                    data: cachedData.data,\n                    error: null,\n                    loading: false\n                };\n            }\n            const result = await handleRequest(`/tenders/${id}`);\n            // Save successful result to cache\n            if (result.data) {\n                cache.set(cacheKey, {\n                    data: result.data,\n                    timestamp: now\n                });\n            }\n            return result;\n        }\n    }[\"createTenderAPI.useCallback[getTenderById]\"], [\n        handleRequest\n    ]);\n    const createTender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"createTenderAPI.useCallback[createTender]\": async (tenderData)=>{\n            return handleRequest('/tenders', {\n                method: 'POST',\n                body: JSON.stringify(tenderData)\n            });\n        }\n    }[\"createTenderAPI.useCallback[createTender]\"], [\n        handleRequest\n    ]);\n    const updateTender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"createTenderAPI.useCallback[updateTender]\": async (id, tenderData)=>{\n            return handleRequest(`/tenders/${id}`, {\n                method: 'PUT',\n                body: JSON.stringify(tenderData)\n            });\n        }\n    }[\"createTenderAPI.useCallback[updateTender]\"], [\n        handleRequest\n    ]);\n    const deleteTender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"createTenderAPI.useCallback[deleteTender]\": async (id)=>{\n            return handleRequest(`/tenders/${id}`, {\n                method: 'DELETE'\n            });\n        }\n    }[\"createTenderAPI.useCallback[deleteTender]\"], [\n        handleRequest\n    ]);\n    const getBids = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"createTenderAPI.useCallback[getBids]\": async (tenderId)=>{\n            console.log(`Getting bids for tender: ${tenderId}, mock mode: ${useMockData}`);\n            return handleRequest(`/tenders/${tenderId}/bids`);\n        }\n    }[\"createTenderAPI.useCallback[getBids]\"], [\n        handleRequest,\n        useMockData\n    ]);\n    const createBid = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"createTenderAPI.useCallback[createBid]\": async (bidData)=>{\n            const { tenderId, ...restData } = bidData;\n            console.log(`Creating bid for tender ${tenderId}:`, restData);\n            return handleRequest(`/tenders/${tenderId}/bids`, {\n                method: 'POST',\n                body: JSON.stringify(restData)\n            });\n        }\n    }[\"createTenderAPI.useCallback[createBid]\"], [\n        handleRequest\n    ]);\n    const updateBid = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"createTenderAPI.useCallback[updateBid]\": async (tenderId, bidId, bidData)=>{\n            return handleRequest(`/tenders/${tenderId}/bids/${bidId}`, {\n                method: 'PUT',\n                body: JSON.stringify(bidData)\n            });\n        }\n    }[\"createTenderAPI.useCallback[updateBid]\"], [\n        handleRequest\n    ]);\n    const deleteBid = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"createTenderAPI.useCallback[deleteBid]\": async (tenderId, bidId)=>{\n            return handleRequest(`/tenders/${tenderId}/bids/${bidId}`, {\n                method: 'DELETE'\n            });\n        }\n    }[\"createTenderAPI.useCallback[deleteBid]\"], [\n        handleRequest\n    ]);\n    const loginWithWallet = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"createTenderAPI.useCallback[loginWithWallet]\": async (walletAddress)=>{\n            return handleRequest('/users/login', {\n                method: 'POST',\n                body: JSON.stringify({\n                    walletAddress\n                })\n            });\n        }\n    }[\"createTenderAPI.useCallback[loginWithWallet]\"], [\n        handleRequest\n    ]);\n    const getCurrentUser = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"createTenderAPI.useCallback[getCurrentUser]\": async ()=>{\n            return handleRequest('/users/me');\n        }\n    }[\"createTenderAPI.useCallback[getCurrentUser]\"], [\n        handleRequest\n    ]);\n    // Для тестирования и отладки\n    const toggleMockData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"createTenderAPI.useCallback[toggleMockData]\": ()=>{\n            setUseMockData({\n                \"createTenderAPI.useCallback[toggleMockData]\": (prev)=>{\n                    console.log(`Toggling mock data mode from ${prev} to ${!prev}`);\n                    // Reset error state when switching modes\n                    setError(null);\n                    return !prev;\n                }\n            }[\"createTenderAPI.useCallback[toggleMockData]\"]);\n        }\n    }[\"createTenderAPI.useCallback[toggleMockData]\"], []);\n    // Add getBidsForTender function which is an alias for getBids\n    const getBidsForTender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"createTenderAPI.useCallback[getBidsForTender]\": async (tenderId)=>{\n            console.log(`getBidsForTender called for tender: ${tenderId}, mock mode: ${useMockData}`);\n            return getBids(tenderId);\n        }\n    }[\"createTenderAPI.useCallback[getBidsForTender]\"], [\n        getBids,\n        useMockData\n    ]);\n    return {\n        loading,\n        error,\n        useMockData,\n        toggleMockData,\n        getTenders,\n        getTenderById,\n        createTender,\n        updateTender,\n        deleteTender,\n        getBids,\n        getBidsForTender,\n        createBid,\n        updateBid,\n        deleteBid,\n        loginWithWallet,\n        getCurrentUser\n    };\n};\n// The hook now returns a singleton instance\nconst useTenderAPI = ()=>{\n    // Always call all hooks unconditionally at the top level\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const useMockDataFromEnv = process.env.NEXT_PUBLIC_USE_MOCK_DATA === 'true';\n    const [useMockData, setUseMockData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(useMockDataFromEnv);\n    // Initialize refs\n    const instanceRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const isInitializedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    // Log initial state only once\n    const logInitialState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTenderAPI.useCallback[logInitialState]\": ()=>{\n            if (!isInitializedRef.current) {\n                console.log(`TenderAPI hook initialized with mock data ${useMockData ? 'enabled' : 'disabled'} (env: ${useMockDataFromEnv})`);\n                isInitializedRef.current = true;\n            }\n        }\n    }[\"useTenderAPI.useCallback[logInitialState]\"], [\n        useMockData,\n        useMockDataFromEnv\n    ]);\n    // Call this immediately\n    logInitialState();\n    // Define the handleRequest function\n    const handleRequest = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTenderAPI.useCallback[handleRequest]\": async (endpoint, options = {}, retry = 0)=>{\n            setLoading(true);\n            setError(null);\n            // Early return for mock data if enabled\n            if (useMockData) {\n                console.log(`Using mock data for ${endpoint} (mock mode enabled)`);\n                if (endpoint === '/tenders') {\n                    setLoading(false);\n                    return {\n                        data: getMockTenders(),\n                        error: null,\n                        loading: false\n                    };\n                }\n                if (endpoint.includes('/tenders/') && endpoint.includes('/bids')) {\n                    const tenderId = endpoint.split('/')[2];\n                    console.log(`Getting mock bids for tender: ${tenderId}`);\n                    setLoading(false);\n                    return {\n                        data: getMockBids(tenderId),\n                        error: null,\n                        loading: false\n                    };\n                }\n                // For specific tender details\n                if (endpoint.startsWith('/tenders/') && !endpoint.includes('/bids')) {\n                    const tenderId = endpoint.split('/')[2];\n                    const allTenders = getMockTenders();\n                    const tender = allTenders.find({\n                        \"useTenderAPI.useCallback[handleRequest].tender\": (t)=>t.id === tenderId\n                    }[\"useTenderAPI.useCallback[handleRequest].tender\"]);\n                    if (tender) {\n                        setLoading(false);\n                        return {\n                            data: tender,\n                            error: null,\n                            loading: false\n                        };\n                    }\n                }\n            }\n            try {\n                console.log(`Making API request to ${endpoint}:`, options);\n                // Add default headers for JSON requests\n                const fetchOptions = {\n                    ...options,\n                    headers: {\n                        ...options.headers,\n                        'Content-Type': 'application/json'\n                    }\n                };\n                // Fetch with timeout\n                const response = await fetchWithTimeout(`${API_BASE_URL}${endpoint}`, fetchOptions, API_TIMEOUT);\n                // Check if response is OK\n                if (!response.ok) {\n                    // Handle 404 errors differently - they're expected sometimes\n                    if (response.status === 404) {\n                        console.log(`Resource not found at ${endpoint}. This might be expected.`);\n                        // Return empty data rather than treating as error for 404\n                        return {\n                            data: null,\n                            error: null,\n                            loading: false\n                        };\n                    }\n                    // Handle 500 errors by using mock data\n                    if (response.status === 500) {\n                        console.log(`Server error (500) for ${endpoint}. Falling back to mock data.`);\n                        // Switch to mock data mode if not already enabled\n                        if (!useMockData) {\n                            setUseMockData(true);\n                        }\n                        // Return appropriate mock data based on the endpoint\n                        if (endpoint === '/tenders') {\n                            setLoading(false);\n                            return {\n                                data: getMockTenders(),\n                                error: null,\n                                loading: false\n                            };\n                        }\n                        if (endpoint.includes('/tenders/') && endpoint.includes('/bids')) {\n                            const tenderId = endpoint.split('/')[2];\n                            console.log(`Getting mock bids for tender (500 error): ${tenderId}`);\n                            setLoading(false);\n                            return {\n                                data: getMockBids(tenderId),\n                                error: null,\n                                loading: false\n                            };\n                        }\n                        // For specific tender details\n                        if (endpoint.startsWith('/tenders/') && !endpoint.includes('/bids')) {\n                            const tenderId = endpoint.split('/')[2];\n                            const allTenders = getMockTenders();\n                            const tender = allTenders.find({\n                                \"useTenderAPI.useCallback[handleRequest].tender\": (t)=>t.id === tenderId\n                            }[\"useTenderAPI.useCallback[handleRequest].tender\"]);\n                            if (tender) {\n                                setLoading(false);\n                                return {\n                                    data: tender,\n                                    error: null,\n                                    loading: false\n                                };\n                            }\n                        }\n                    }\n                    // General error fallback - use mock data in development or if mock mode is enabled\n                    if (true) {\n                        console.log(`HTTP Error (${response.status}) for ${endpoint}. Using mock data as fallback.`);\n                        // Switch to mock data mode if not already enabled\n                        if (!useMockData) {\n                            setUseMockData(true);\n                        }\n                        // Return appropriate mock data based on the endpoint\n                        if (endpoint === '/tenders') {\n                            setLoading(false);\n                            return {\n                                data: getMockTenders(),\n                                error: null,\n                                loading: false\n                            };\n                        }\n                        if (endpoint.includes('/tenders/') && endpoint.includes('/bids')) {\n                            const tenderId = endpoint.split('/')[2];\n                            console.log(`Getting mock bids for tender (HTTP error): ${tenderId}`);\n                            setLoading(false);\n                            return {\n                                data: getMockBids(tenderId),\n                                error: null,\n                                loading: false\n                            };\n                        }\n                        // For specific tender details\n                        if (endpoint.startsWith('/tenders/') && !endpoint.includes('/bids')) {\n                            const tenderId = endpoint.split('/')[2];\n                            const allTenders = getMockTenders();\n                            const tender = allTenders.find({\n                                \"useTenderAPI.useCallback[handleRequest].tender\": (t)=>t.id === tenderId\n                            }[\"useTenderAPI.useCallback[handleRequest].tender\"]);\n                            if (tender) {\n                                setLoading(false);\n                                return {\n                                    data: tender,\n                                    error: null,\n                                    loading: false\n                                };\n                            }\n                        }\n                    }\n                    throw new Error(`API error: ${response.status} ${response.statusText}`);\n                }\n                // Check content type to ensure we're getting JSON\n                const contentType = response.headers.get('content-type');\n                if (!contentType || !contentType.includes('application/json')) {\n                    console.error('API returned non-JSON content type:', contentType);\n                    try {\n                        // Try to see what was returned\n                        const text = await response.text();\n                        console.log('API response text:', text.substring(0, 200) + '...');\n                        // Show more detailed error in development\n                        if (true) {\n                            console.log('Development environment detected, showing detailed error');\n                            // Check if it's an HTML response (typically 404/500 error pages)\n                            if (text.includes('<!DOCTYPE html>')) {\n                                console.error('API returned an HTML page instead of JSON data');\n                                // In development, we'll use mock data instead\n                                console.log('Switching to mock data due to HTML response');\n                                if (!useMockData) {\n                                    setUseMockData(true);\n                                }\n                                // Return mock data\n                                if (endpoint.includes('/tenders') && !endpoint.includes('/bids')) {\n                                    // For tender endpoints, return mock tenders\n                                    return {\n                                        data: getMockTenders(),\n                                        error: null,\n                                        loading: false\n                                    };\n                                } else if (endpoint.includes('/bids')) {\n                                    // For bid endpoints, return mock bids\n                                    return {\n                                        data: getMockBids(endpoint.split('/')[2]),\n                                        error: null,\n                                        loading: false\n                                    };\n                                }\n                            }\n                        }\n                        throw new Error('Response is not JSON. API returned: ' + contentType);\n                    } catch (textError) {\n                        throw new Error(`Failed to parse response: ${textError}`);\n                    }\n                }\n                // Parse JSON response\n                const data = await response.json();\n                // API response with proper structure\n                console.log(`API response from ${endpoint}:`, {\n                    status: response.status,\n                    ok: response.ok,\n                    data: data\n                });\n                return {\n                    data,\n                    error: null,\n                    loading: false\n                };\n            } catch (error) {\n                let errorMessage = error.message || 'Unknown error';\n                // Network errors (like CORS, connection refused, etc.)\n                if (error instanceof TypeError && error.message.includes('fetch')) {\n                    errorMessage = `Network error: ${error.message}`;\n                    console.error(`Network error for ${endpoint}:`, error);\n                } else if (error instanceof RequestTimeoutError) {\n                    errorMessage = `Request timed out after ${API_TIMEOUT}ms`;\n                    console.error(`Timeout for ${endpoint}:`, error);\n                } else {\n                    console.error(`API error for ${endpoint}:`, error);\n                }\n                // Retry logic for certain errors (not 4xx client errors)\n                if (retry < MAX_RETRIES && !errorMessage.includes('API error: 4')) {\n                    console.log(`Retrying request to ${endpoint} (attempt ${retry + 1}/${MAX_RETRIES})`);\n                    return handleRequest(endpoint, options, retry + 1);\n                }\n                // Return mock data in development mode if API fails\n                if (true) {\n                    console.log(`Using mock data for ${endpoint} due to API error`);\n                    // Toggle mock data mode if not already on\n                    if (!useMockData) {\n                        setUseMockData(true);\n                    }\n                    // Return appropriate mock data based on the endpoint\n                    if (endpoint === '/tenders') {\n                        setLoading(false);\n                        return {\n                            data: getMockTenders(),\n                            error: null,\n                            loading: false\n                        };\n                    }\n                    if (endpoint.includes('/tenders/') && endpoint.includes('/bids')) {\n                        const tenderId = endpoint.split('/')[2];\n                        console.log(`Getting mock bids for tender (error case): ${tenderId}`);\n                        setLoading(false);\n                        return {\n                            data: getMockBids(tenderId),\n                            error: null,\n                            loading: false\n                        };\n                    }\n                    // For specific tender details\n                    if (endpoint.startsWith('/tenders/') && !endpoint.includes('/bids')) {\n                        const tenderId = endpoint.split('/')[2];\n                        const allTenders = getMockTenders();\n                        const tender = allTenders.find({\n                            \"useTenderAPI.useCallback[handleRequest].tender\": (t)=>t.id === tenderId\n                        }[\"useTenderAPI.useCallback[handleRequest].tender\"]);\n                        if (tender) {\n                            setLoading(false);\n                            return {\n                                data: tender,\n                                error: null,\n                                loading: false\n                            };\n                        }\n                    }\n                }\n                setError(errorMessage);\n                return {\n                    data: null,\n                    error: errorMessage,\n                    loading: false\n                };\n            } finally{\n                setLoading(false);\n            }\n        }\n    }[\"useTenderAPI.useCallback[handleRequest]\"], [\n        API_BASE_URL,\n        useMockData\n    ]);\n    // Define other API methods with useCallback\n    const getTenders = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTenderAPI.useCallback[getTenders]\": async ()=>{\n            return handleRequest('/tenders');\n        }\n    }[\"useTenderAPI.useCallback[getTenders]\"], [\n        handleRequest\n    ]);\n    const getTenderById = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTenderAPI.useCallback[getTenderById]\": async (id)=>{\n            // Check cache\n            const now = Date.now();\n            const cacheKey = `/tenders/${id}`;\n            const cachedData = cache.get(cacheKey);\n            // If data exists in cache and isn't stale, return it\n            if (cachedData && now - cachedData.timestamp < CACHE_TTL) {\n                console.log('Using cached data for tender:', id);\n                return {\n                    data: cachedData.data,\n                    error: null,\n                    loading: false\n                };\n            }\n            const result = await handleRequest(`/tenders/${id}`);\n            // Save successful result to cache\n            if (result.data) {\n                cache.set(cacheKey, {\n                    data: result.data,\n                    timestamp: now\n                });\n            }\n            return result;\n        }\n    }[\"useTenderAPI.useCallback[getTenderById]\"], [\n        handleRequest\n    ]);\n    const createTender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTenderAPI.useCallback[createTender]\": async (tenderData)=>{\n            return handleRequest('/tenders', {\n                method: 'POST',\n                body: JSON.stringify(tenderData)\n            });\n        }\n    }[\"useTenderAPI.useCallback[createTender]\"], [\n        handleRequest\n    ]);\n    const updateTender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTenderAPI.useCallback[updateTender]\": async (id, tenderData)=>{\n            return handleRequest(`/tenders/${id}`, {\n                method: 'PUT',\n                body: JSON.stringify(tenderData)\n            });\n        }\n    }[\"useTenderAPI.useCallback[updateTender]\"], [\n        handleRequest\n    ]);\n    const deleteTender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTenderAPI.useCallback[deleteTender]\": async (id)=>{\n            return handleRequest(`/tenders/${id}`, {\n                method: 'DELETE'\n            });\n        }\n    }[\"useTenderAPI.useCallback[deleteTender]\"], [\n        handleRequest\n    ]);\n    const getBids = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTenderAPI.useCallback[getBids]\": async (tenderId)=>{\n            console.log(`Getting bids for tender: ${tenderId}, mock mode: ${useMockData}`);\n            return handleRequest(`/tenders/${tenderId}/bids`);\n        }\n    }[\"useTenderAPI.useCallback[getBids]\"], [\n        handleRequest,\n        useMockData\n    ]);\n    const createBid = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTenderAPI.useCallback[createBid]\": async (bidData)=>{\n            const { tenderId, ...restData } = bidData;\n            console.log(`Creating bid for tender ${tenderId}:`, restData);\n            return handleRequest(`/tenders/${tenderId}/bids`, {\n                method: 'POST',\n                body: JSON.stringify(restData)\n            });\n        }\n    }[\"useTenderAPI.useCallback[createBid]\"], [\n        handleRequest\n    ]);\n    const updateBid = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTenderAPI.useCallback[updateBid]\": async (tenderId, bidId, bidData)=>{\n            return handleRequest(`/tenders/${tenderId}/bids/${bidId}`, {\n                method: 'PUT',\n                body: JSON.stringify(bidData)\n            });\n        }\n    }[\"useTenderAPI.useCallback[updateBid]\"], [\n        handleRequest\n    ]);\n    const deleteBid = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTenderAPI.useCallback[deleteBid]\": async (tenderId, bidId)=>{\n            return handleRequest(`/tenders/${tenderId}/bids/${bidId}`, {\n                method: 'DELETE'\n            });\n        }\n    }[\"useTenderAPI.useCallback[deleteBid]\"], [\n        handleRequest\n    ]);\n    const loginWithWallet = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTenderAPI.useCallback[loginWithWallet]\": async (walletAddress)=>{\n            return handleRequest('/users/login', {\n                method: 'POST',\n                body: JSON.stringify({\n                    walletAddress\n                })\n            });\n        }\n    }[\"useTenderAPI.useCallback[loginWithWallet]\"], [\n        handleRequest\n    ]);\n    const getCurrentUser = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTenderAPI.useCallback[getCurrentUser]\": async ()=>{\n            return handleRequest('/users/me');\n        }\n    }[\"useTenderAPI.useCallback[getCurrentUser]\"], [\n        handleRequest\n    ]);\n    // Add getBidsForTender function which is an alias for getBids\n    const getBidsForTender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTenderAPI.useCallback[getBidsForTender]\": async (tenderId)=>{\n            console.log(`getBidsForTender called for tender: ${tenderId}, mock mode: ${useMockData}`);\n            return getBids(tenderId);\n        }\n    }[\"useTenderAPI.useCallback[getBidsForTender]\"], [\n        getBids,\n        useMockData\n    ]);\n    // For testing and debugging\n    const toggleMockData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTenderAPI.useCallback[toggleMockData]\": ()=>{\n            setUseMockData({\n                \"useTenderAPI.useCallback[toggleMockData]\": (prev)=>{\n                    console.log(`Toggling mock data mode from ${prev} to ${!prev}`);\n                    // Reset error state when switching modes\n                    setError(null);\n                    return !prev;\n                }\n            }[\"useTenderAPI.useCallback[toggleMockData]\"]);\n        }\n    }[\"useTenderAPI.useCallback[toggleMockData]\"], []);\n    // Create the API instance if it doesn't already exist\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"useTenderAPI.useMemo\": ()=>{\n            // If we already have an instance in this component, use it\n            if (instanceRef.current) {\n                return;\n            }\n            // If we have a global singleton, use that\n            if (SINGLETON_INSTANCE) {\n                instanceRef.current = SINGLETON_INSTANCE;\n                console.log('Using existing TenderAPI singleton instance');\n                return;\n            }\n            // Create a new instance with all the methods and state\n            const instance = {\n                loading,\n                error,\n                useMockData,\n                toggleMockData,\n                getTenders,\n                getTenderById,\n                createTender,\n                updateTender,\n                deleteTender,\n                getBids,\n                getBidsForTender,\n                createBid,\n                updateBid,\n                deleteBid,\n                loginWithWallet,\n                getCurrentUser\n            };\n            // Store it locally and globally\n            instanceRef.current = instance;\n            SINGLETON_INSTANCE = instance;\n            console.log('Created new TenderAPI singleton instance');\n        }\n    }[\"useTenderAPI.useMemo\"], [\n        loading,\n        error,\n        useMockData,\n        toggleMockData,\n        getTenders,\n        getTenderById,\n        createTender,\n        updateTender,\n        deleteTender,\n        getBids,\n        getBidsForTender,\n        createBid,\n        updateBid,\n        deleteBid,\n        loginWithWallet,\n        getCurrentUser\n    ]);\n    // Always return the same instance once created\n    return instanceRef.current;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useTenderAPI);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./hooks/useTenderAPI.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./hooks/useWeb3.ts":
/*!**************************!*\
  !*** ./hooks/useWeb3.ts ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useWeb3: () => (/* binding */ useWeb3)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"ethers\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([ethers__WEBPACK_IMPORTED_MODULE_1__]);\nethers__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nfunction useWeb3() {\n    const [provider, setProvider] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [signer, setSigner] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [account, setAccount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [chainId, setChainId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isConnecting, setIsConnecting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Use refs to track the latest values without triggering re-renders\n    const accountRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const providerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const signerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    // Last connection attempt timestamp to prevent rapid reconnection attempts\n    const lastConnectionAttemptRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n    // Initialize web3 connection\n    const initWeb3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useWeb3.useCallback[initWeb3]\": async ()=>{\n            // Prevent multiple simultaneous connection attempts\n            if (isConnecting) {\n                console.log(\"Already connecting to Web3, skipping\");\n                return {\n                    success: false,\n                    error: \"Connection in progress\"\n                };\n            }\n            // Throttle connection attempts\n            const now = Date.now();\n            if (now - lastConnectionAttemptRef.current < 3000) {\n                console.log(\"Connection attempt too soon, skipping\");\n                return {\n                    success: false,\n                    error: \"Too many connection attempts\"\n                };\n            }\n            lastConnectionAttemptRef.current = now;\n            setIsConnecting(true);\n            setError(null);\n            try {\n                // Check if ethereum is available\n                if (!window.ethereum) {\n                    throw new Error(\"MetaMask не установлен. Пожалуйста, установите расширение MetaMask.\");\n                }\n                console.log(\"Initializing Web3 provider\");\n                // Create provider instance using Ethers.js v6 API\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.BrowserProvider(window.ethereum);\n                providerRef.current = provider;\n                setProvider(provider);\n                // Request accounts\n                const accounts = await window.ethereum.request({\n                    method: 'eth_requestAccounts'\n                });\n                const account = accounts[0];\n                accountRef.current = account;\n                setAccount(account);\n                // Get network information\n                const network = await provider.getNetwork();\n                setChainId(Number(network.chainId));\n                // Get signer\n                const signer = await provider.getSigner();\n                signerRef.current = signer;\n                setSigner(signer);\n                console.log(\"Web3 initialized successfully\", {\n                    account,\n                    chainId: Number(network.chainId)\n                });\n                return {\n                    success: true,\n                    data: {\n                        provider,\n                        signer,\n                        account\n                    }\n                };\n            } catch (error) {\n                console.error(\"Failed to initialize Web3:\", error);\n                const errorMessage = error.message || \"Unknown error connecting to MetaMask\";\n                setError(errorMessage);\n                return {\n                    success: false,\n                    error: errorMessage\n                };\n            } finally{\n                setIsConnecting(false);\n            }\n        }\n    }[\"useWeb3.useCallback[initWeb3]\"], [\n        isConnecting\n    ]);\n    // Connect to wallet\n    const connectWallet = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useWeb3.useCallback[connectWallet]\": async ()=>{\n            return initWeb3();\n        }\n    }[\"useWeb3.useCallback[connectWallet]\"], [\n        initWeb3\n    ]);\n    // Handle account changes\n    const handleAccountsChanged = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useWeb3.useCallback[handleAccountsChanged]\": async (accounts)=>{\n            if (accounts.length === 0) {\n                console.log(\"Disconnected from MetaMask\");\n                setAccount(null);\n                accountRef.current = null;\n            } else if (accounts[0] !== accountRef.current) {\n                console.log(\"Account changed:\", accounts[0]);\n                setAccount(accounts[0]);\n                accountRef.current = accounts[0];\n                // Update signer when account changes\n                if (providerRef.current) {\n                    try {\n                        const newSigner = await providerRef.current.getSigner();\n                        setSigner(newSigner);\n                        signerRef.current = newSigner;\n                    } catch (error) {\n                        console.error(\"Failed to get signer after account change:\", error);\n                    }\n                }\n            }\n        }\n    }[\"useWeb3.useCallback[handleAccountsChanged]\"], []);\n    // Handle chain changes\n    const handleChainChanged = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useWeb3.useCallback[handleChainChanged]\": async (chainIdHex)=>{\n            // chainId is in hex format\n            const newChainId = parseInt(chainIdHex, 16);\n            console.log(\"Chain changed:\", newChainId);\n            setChainId(newChainId);\n            // Reload provider and signer when chain changes\n            if (window.ethereum) {\n                try {\n                    const provider = new ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.BrowserProvider(window.ethereum);\n                    providerRef.current = provider;\n                    setProvider(provider);\n                    const signer = await provider.getSigner();\n                    signerRef.current = signer;\n                    setSigner(signer);\n                } catch (error) {\n                    console.error(\"Failed to update provider after chain change:\", error);\n                }\n            }\n        }\n    }[\"useWeb3.useCallback[handleChainChanged]\"], []);\n    // Handle disconnection\n    const handleDisconnect = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useWeb3.useCallback[handleDisconnect]\": (error)=>{\n            console.log(\"MetaMask disconnected:\", error);\n            setError(`MetaMask disconnected: ${error.message}`);\n        }\n    }[\"useWeb3.useCallback[handleDisconnect]\"], []);\n    // Set up event listeners\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useWeb3.useEffect\": ()=>{\n            if (window.ethereum) {\n                // Early return if the event listeners are already added\n                const getAccounts = {\n                    \"useWeb3.useEffect.getAccounts\": async ()=>{\n                        try {\n                            // Passive check for existing connection\n                            const accounts = await window.ethereum.request({\n                                method: 'eth_accounts'\n                            });\n                            if (accounts.length > 0) {\n                                console.log(\"Found existing connection\", accounts[0]);\n                                const account = accounts[0];\n                                accountRef.current = account;\n                                setAccount(account);\n                                // Initialize provider and signer using Ethers.js v6 API\n                                const provider = new ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.BrowserProvider(window.ethereum);\n                                providerRef.current = provider;\n                                setProvider(provider);\n                                const network = await provider.getNetwork();\n                                setChainId(Number(network.chainId));\n                                const signer = await provider.getSigner();\n                                signerRef.current = signer;\n                                setSigner(signer);\n                            }\n                        } catch (error) {\n                            console.error(\"Error checking existing accounts:\", error);\n                        }\n                    }\n                }[\"useWeb3.useEffect.getAccounts\"];\n                getAccounts();\n                // Set up event listeners\n                window.ethereum.on('accountsChanged', handleAccountsChanged);\n                window.ethereum.on('chainChanged', handleChainChanged);\n                window.ethereum.on('disconnect', handleDisconnect);\n                // Clean up listeners\n                return ({\n                    \"useWeb3.useEffect\": ()=>{\n                        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n                        window.ethereum.removeListener('chainChanged', handleChainChanged);\n                        window.ethereum.removeListener('disconnect', handleDisconnect);\n                    }\n                })[\"useWeb3.useEffect\"];\n            }\n        }\n    }[\"useWeb3.useEffect\"], [\n        handleAccountsChanged,\n        handleChainChanged,\n        handleDisconnect\n    ]);\n    // Return stable references using useCallback and useMemo\n    const memoizedProviderValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"useWeb3.useMemo[memoizedProviderValue]\": ()=>provider\n    }[\"useWeb3.useMemo[memoizedProviderValue]\"], [\n        provider\n    ]);\n    const memoizedSignerValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"useWeb3.useMemo[memoizedSignerValue]\": ()=>signer\n    }[\"useWeb3.useMemo[memoizedSignerValue]\"], [\n        signer\n    ]);\n    const memoizedAccountValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"useWeb3.useMemo[memoizedAccountValue]\": ()=>account\n    }[\"useWeb3.useMemo[memoizedAccountValue]\"], [\n        account\n    ]);\n    const memoizedChainIdValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"useWeb3.useMemo[memoizedChainIdValue]\": ()=>chainId\n    }[\"useWeb3.useMemo[memoizedChainIdValue]\"], [\n        chainId\n    ]);\n    return {\n        provider: memoizedProviderValue,\n        signer: memoizedSignerValue,\n        account: memoizedAccountValue,\n        chainId: memoizedChainIdValue,\n        connectWallet,\n        isConnecting,\n        isConnected: !!memoizedAccountValue,\n        error\n    };\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./hooks/useWeb3.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2Ftender%2Fcreate&preferredRegion=&absolutePagePath=.%2Fpages%2Ftender%2Fcreate.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2Ftender%2Fcreate&preferredRegion=&absolutePagePath=.%2Fpages%2Ftender%2Fcreate.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D! ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getServerSideProps: () => (/* binding */ getServerSideProps),\n/* harmony export */   getStaticPaths: () => (/* binding */ getStaticPaths),\n/* harmony export */   getStaticProps: () => (/* binding */ getStaticProps),\n/* harmony export */   reportWebVitals: () => (/* binding */ reportWebVitals),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   unstable_getServerProps: () => (/* binding */ unstable_getServerProps),\n/* harmony export */   unstable_getServerSideProps: () => (/* binding */ unstable_getServerSideProps),\n/* harmony export */   unstable_getStaticParams: () => (/* binding */ unstable_getStaticParams),\n/* harmony export */   unstable_getStaticPaths: () => (/* binding */ unstable_getStaticPaths),\n/* harmony export */   unstable_getStaticProps: () => (/* binding */ unstable_getStaticProps)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages/module.compiled */ \"(pages-dir-node)/./node_modules/next/dist/server/route-modules/pages/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(pages-dir-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(pages-dir-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! private-next-pages/_document */ \"(pages-dir-node)/./node_modules/next/dist/pages/_document.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! private-next-pages/_app */ \"(pages-dir-node)/./pages/_app.tsx\");\n/* harmony import */ var _pages_tender_create_tsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pages/tender/create.tsx */ \"(pages-dir-node)/./pages/tender/create.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__, _pages_tender_create_tsx__WEBPACK_IMPORTED_MODULE_5__]);\n([private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__, _pages_tender_create_tsx__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n// Import the app and document modules.\n\n\n// Import the userland code.\n\n// Re-export the component (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_tender_create_tsx__WEBPACK_IMPORTED_MODULE_5__, 'default'));\n// Re-export methods.\nconst getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_tender_create_tsx__WEBPACK_IMPORTED_MODULE_5__, 'getStaticProps');\nconst getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_tender_create_tsx__WEBPACK_IMPORTED_MODULE_5__, 'getStaticPaths');\nconst getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_tender_create_tsx__WEBPACK_IMPORTED_MODULE_5__, 'getServerSideProps');\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_tender_create_tsx__WEBPACK_IMPORTED_MODULE_5__, 'config');\nconst reportWebVitals = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_tender_create_tsx__WEBPACK_IMPORTED_MODULE_5__, 'reportWebVitals');\n// Re-export legacy methods.\nconst unstable_getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_tender_create_tsx__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getStaticProps');\nconst unstable_getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_tender_create_tsx__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getStaticPaths');\nconst unstable_getStaticParams = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_tender_create_tsx__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getStaticParams');\nconst unstable_getServerProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_tender_create_tsx__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getServerProps');\nconst unstable_getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_tender_create_tsx__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getServerSideProps');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES,\n        page: \"/tender/create\",\n        pathname: \"/tender/create\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    components: {\n        // default export might not exist when optimized for data only\n        App: private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n        Document: (private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default())\n    },\n    userland: _pages_tender_create_tsx__WEBPACK_IMPORTED_MODULE_5__\n});\n\n//# sourceMappingURL=pages.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVMmcGFnZT0lMkZ0ZW5kZXIlMkZjcmVhdGUmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRnRlbmRlciUyRmNyZWF0ZS50c3gmYWJzb2x1dGVBcHBQYXRoPXByaXZhdGUtbmV4dC1wYWdlcyUyRl9hcHAmYWJzb2x1dGVEb2N1bWVudFBhdGg9cHJpdmF0ZS1uZXh0LXBhZ2VzJTJGX2RvY3VtZW50Jm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3RjtBQUNoQztBQUNFO0FBQzFEO0FBQ3lEO0FBQ1Y7QUFDL0M7QUFDc0Q7QUFDdEQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHFEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLHVCQUF1Qix3RUFBSyxDQUFDLHFEQUFRO0FBQ3JDLHVCQUF1Qix3RUFBSyxDQUFDLHFEQUFRO0FBQ3JDLDJCQUEyQix3RUFBSyxDQUFDLHFEQUFRO0FBQ3pDLGVBQWUsd0VBQUssQ0FBQyxxREFBUTtBQUM3Qix3QkFBd0Isd0VBQUssQ0FBQyxxREFBUTtBQUM3QztBQUNPLGdDQUFnQyx3RUFBSyxDQUFDLHFEQUFRO0FBQzlDLGdDQUFnQyx3RUFBSyxDQUFDLHFEQUFRO0FBQzlDLGlDQUFpQyx3RUFBSyxDQUFDLHFEQUFRO0FBQy9DLGdDQUFnQyx3RUFBSyxDQUFDLHFEQUFRO0FBQzlDLG9DQUFvQyx3RUFBSyxDQUFDLHFEQUFRO0FBQ3pEO0FBQ08sd0JBQXdCLGtHQUFnQjtBQUMvQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsYUFBYSw4REFBVztBQUN4QixrQkFBa0Isb0VBQWdCO0FBQ2xDLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxpQyIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL3BhZ2VzL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIGFwcCBhbmQgZG9jdW1lbnQgbW9kdWxlcy5cbmltcG9ydCAqIGFzIGRvY3VtZW50IGZyb20gXCJwcml2YXRlLW5leHQtcGFnZXMvX2RvY3VtZW50XCI7XG5pbXBvcnQgKiBhcyBhcHAgZnJvbSBcInByaXZhdGUtbmV4dC1wYWdlcy9fYXBwXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy90ZW5kZXIvY3JlYXRlLnRzeFwiO1xuLy8gUmUtZXhwb3J0IHRoZSBjb21wb25lbnQgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsICdkZWZhdWx0Jyk7XG4vLyBSZS1leHBvcnQgbWV0aG9kcy5cbmV4cG9ydCBjb25zdCBnZXRTdGF0aWNQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCAnZ2V0U3RhdGljUHJvcHMnKTtcbmV4cG9ydCBjb25zdCBnZXRTdGF0aWNQYXRocyA9IGhvaXN0KHVzZXJsYW5kLCAnZ2V0U3RhdGljUGF0aHMnKTtcbmV4cG9ydCBjb25zdCBnZXRTZXJ2ZXJTaWRlUHJvcHMgPSBob2lzdCh1c2VybGFuZCwgJ2dldFNlcnZlclNpZGVQcm9wcycpO1xuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCAnY29uZmlnJyk7XG5leHBvcnQgY29uc3QgcmVwb3J0V2ViVml0YWxzID0gaG9pc3QodXNlcmxhbmQsICdyZXBvcnRXZWJWaXRhbHMnKTtcbi8vIFJlLWV4cG9ydCBsZWdhY3kgbWV0aG9kcy5cbmV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTdGF0aWNQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCAndW5zdGFibGVfZ2V0U3RhdGljUHJvcHMnKTtcbmV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTdGF0aWNQYXRocyA9IGhvaXN0KHVzZXJsYW5kLCAndW5zdGFibGVfZ2V0U3RhdGljUGF0aHMnKTtcbmV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTdGF0aWNQYXJhbXMgPSBob2lzdCh1c2VybGFuZCwgJ3Vuc3RhYmxlX2dldFN0YXRpY1BhcmFtcycpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFNlcnZlclByb3BzID0gaG9pc3QodXNlcmxhbmQsICd1bnN0YWJsZV9nZXRTZXJ2ZXJQcm9wcycpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFNlcnZlclNpZGVQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCAndW5zdGFibGVfZ2V0U2VydmVyU2lkZVByb3BzJyk7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc1JvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFUyxcbiAgICAgICAgcGFnZTogXCIvdGVuZGVyL2NyZWF0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvdGVuZGVyL2NyZWF0ZVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgLy8gZGVmYXVsdCBleHBvcnQgbWlnaHQgbm90IGV4aXN0IHdoZW4gb3B0aW1pemVkIGZvciBkYXRhIG9ubHlcbiAgICAgICAgQXBwOiBhcHAuZGVmYXVsdCxcbiAgICAgICAgRG9jdW1lbnQ6IGRvY3VtZW50LmRlZmF1bHRcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2Ftender%2Fcreate&preferredRegion=&absolutePagePath=.%2Fpages%2Ftender%2Fcreate.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(pages-dir-node)/./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"(pages-dir-node)/./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hot-toast */ \"react-hot-toast\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([react_hot_toast__WEBPACK_IMPORTED_MODULE_3__]);\nreact_hot_toast__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\nfunction App({ Component, pageProps }) {\n    const [isOnline, setIsOnline] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"App.useEffect\": ()=>{\n            // Check initial online status\n            setIsOnline(typeof navigator !== 'undefined' ? navigator.onLine : true);\n            // Add event listeners for online/offline status\n            const handleOnline = {\n                \"App.useEffect.handleOnline\": ()=>{\n                    setIsOnline(true);\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast.success('Подключение к сети восстановлено!');\n                }\n            }[\"App.useEffect.handleOnline\"];\n            const handleOffline = {\n                \"App.useEffect.handleOffline\": ()=>{\n                    setIsOnline(false);\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast.error('Отсутствует подключение к интернету. Некоторые функции могут быть недоступны.');\n                }\n            }[\"App.useEffect.handleOffline\"];\n            window.addEventListener('online', handleOnline);\n            window.addEventListener('offline', handleOffline);\n            return ({\n                \"App.useEffect\": ()=>{\n                    window.removeEventListener('online', handleOnline);\n                    window.removeEventListener('offline', handleOffline);\n                }\n            })[\"App.useEffect\"];\n        }\n    }[\"App.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.Toaster, {\n                position: \"top-right\",\n                toastOptions: {\n                    duration: 6000,\n                    style: {\n                        borderRadius: '8px',\n                        background: '#333',\n                        color: '#fff'\n                    }\n                }\n            }, void 0, false, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/_app.tsx\",\n                lineNumber: 35,\n                columnNumber: 7\n            }, this),\n            !isOnline && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed top-0 left-0 right-0 bg-red-500 text-white text-center py-2 z-50\",\n                children: \"Вы не подключены к интернету. Работаем в оффлайн режиме.\"\n            }, void 0, false, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/_app.tsx\",\n                lineNumber: 47,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                ...pageProps\n            }, void 0, false, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/_app.tsx\",\n                lineNumber: 51,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3BhZ2VzL19hcHAudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUErQjtBQUVhO0FBQ0s7QUFFbEMsU0FBU0ksSUFBSSxFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBWTtJQUM1RCxNQUFNLENBQUNDLFVBQVVDLFlBQVksR0FBR1AsK0NBQVFBLENBQUM7SUFFekNELGdEQUFTQTt5QkFBQztZQUNSLDhCQUE4QjtZQUM5QlEsWUFBWSxPQUFPQyxjQUFjLGNBQWNBLFVBQVVDLE1BQU0sR0FBRztZQUVsRSxnREFBZ0Q7WUFDaEQsTUFBTUM7OENBQWU7b0JBQ25CSCxZQUFZO29CQUNaTCxrREFBS0EsQ0FBQ1MsT0FBTyxDQUFDO2dCQUNoQjs7WUFFQSxNQUFNQzsrQ0FBZ0I7b0JBQ3BCTCxZQUFZO29CQUNaTCxrREFBS0EsQ0FBQ1csS0FBSyxDQUFDO2dCQUNkOztZQUVBQyxPQUFPQyxnQkFBZ0IsQ0FBQyxVQUFVTDtZQUNsQ0ksT0FBT0MsZ0JBQWdCLENBQUMsV0FBV0g7WUFFbkM7aUNBQU87b0JBQ0xFLE9BQU9FLG1CQUFtQixDQUFDLFVBQVVOO29CQUNyQ0ksT0FBT0UsbUJBQW1CLENBQUMsV0FBV0o7Z0JBQ3hDOztRQUNGO3dCQUFHLEVBQUU7SUFFTCxxQkFDRTs7MEJBQ0UsOERBQUNYLG9EQUFPQTtnQkFDTmdCLFVBQVM7Z0JBQ1RDLGNBQWM7b0JBQ1pDLFVBQVU7b0JBQ1ZDLE9BQU87d0JBQ0xDLGNBQWM7d0JBQ2RDLFlBQVk7d0JBQ1pDLE9BQU87b0JBQ1Q7Z0JBQ0Y7Ozs7OztZQUVELENBQUNqQiwwQkFDQSw4REFBQ2tCO2dCQUFJQyxXQUFVOzBCQUF5RTs7Ozs7OzBCQUkxRiw4REFBQ3JCO2dCQUFXLEdBQUdDLFNBQVM7Ozs7Ozs7O0FBRzlCIiwic291cmNlcyI6WyIvVXNlcnMvYWxkaXlhcmJvbGVnZW5vdi90ZW5kZXIvZnJvbnRlbmQvcGFnZXMvX2FwcC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuLi9zdHlsZXMvZ2xvYmFscy5jc3MnO1xuaW1wb3J0IHR5cGUgeyBBcHBQcm9wcyB9IGZyb20gJ25leHQvYXBwJztcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBUb2FzdGVyLCB0b2FzdCB9IGZyb20gJ3JlYWN0LWhvdC10b2FzdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH06IEFwcFByb3BzKSB7XG4gIGNvbnN0IFtpc09ubGluZSwgc2V0SXNPbmxpbmVdID0gdXNlU3RhdGUodHJ1ZSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBDaGVjayBpbml0aWFsIG9ubGluZSBzdGF0dXNcbiAgICBzZXRJc09ubGluZSh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyA/IG5hdmlnYXRvci5vbkxpbmUgOiB0cnVlKTtcblxuICAgIC8vIEFkZCBldmVudCBsaXN0ZW5lcnMgZm9yIG9ubGluZS9vZmZsaW5lIHN0YXR1c1xuICAgIGNvbnN0IGhhbmRsZU9ubGluZSA9ICgpID0+IHtcbiAgICAgIHNldElzT25saW5lKHRydWUpO1xuICAgICAgdG9hc3Quc3VjY2Vzcygn0J/QvtC00LrQu9GO0YfQtdC90LjQtSDQuiDRgdC10YLQuCDQstC+0YHRgdGC0LDQvdC+0LLQu9C10L3QviEnKTtcbiAgICB9O1xuICAgIFxuICAgIGNvbnN0IGhhbmRsZU9mZmxpbmUgPSAoKSA9PiB7XG4gICAgICBzZXRJc09ubGluZShmYWxzZSk7XG4gICAgICB0b2FzdC5lcnJvcign0J7RgtGB0YPRgtGB0YLQstGD0LXRgiDQv9C+0LTQutC70Y7Rh9C10L3QuNC1INC6INC40L3RgtC10YDQvdC10YLRgy4g0J3QtdC60L7RgtC+0YDRi9C1INGE0YPQvdC60YbQuNC4INC80L7Qs9GD0YIg0LHRi9GC0Ywg0L3QtdC00L7RgdGC0YPQv9C90YsuJyk7XG4gICAgfTtcbiAgICBcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignb25saW5lJywgaGFuZGxlT25saW5lKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignb2ZmbGluZScsIGhhbmRsZU9mZmxpbmUpO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdvbmxpbmUnLCBoYW5kbGVPbmxpbmUpO1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ29mZmxpbmUnLCBoYW5kbGVPZmZsaW5lKTtcbiAgICB9O1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPFRvYXN0ZXIgXG4gICAgICAgIHBvc2l0aW9uPVwidG9wLXJpZ2h0XCJcbiAgICAgICAgdG9hc3RPcHRpb25zPXt7XG4gICAgICAgICAgZHVyYXRpb246IDYwMDAsXG4gICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgIGJvcmRlclJhZGl1czogJzhweCcsIFxuICAgICAgICAgICAgYmFja2dyb3VuZDogJyMzMzMnLCBcbiAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicsXG4gICAgICAgICAgfSxcbiAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgICB7IWlzT25saW5lICYmIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaXhlZCB0b3AtMCBsZWZ0LTAgcmlnaHQtMCBiZy1yZWQtNTAwIHRleHQtd2hpdGUgdGV4dC1jZW50ZXIgcHktMiB6LTUwXCI+XG4gICAgICAgICAg0JLRiyDQvdC1INC/0L7QtNC60LvRjtGH0LXQvdGLINC6INC40L3RgtC10YDQvdC10YLRgy4g0KDQsNCx0L7RgtCw0LXQvCDQsiDQvtGE0YTQu9Cw0LnQvSDRgNC10LbQuNC80LUuXG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cbiAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cbiAgICA8Lz5cbiAgKTtcbn0gIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiVG9hc3RlciIsInRvYXN0IiwiQXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwiaXNPbmxpbmUiLCJzZXRJc09ubGluZSIsIm5hdmlnYXRvciIsIm9uTGluZSIsImhhbmRsZU9ubGluZSIsInN1Y2Nlc3MiLCJoYW5kbGVPZmZsaW5lIiwiZXJyb3IiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInBvc2l0aW9uIiwidG9hc3RPcHRpb25zIiwiZHVyYXRpb24iLCJzdHlsZSIsImJvcmRlclJhZGl1cyIsImJhY2tncm91bmQiLCJjb2xvciIsImRpdiIsImNsYXNzTmFtZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./pages/_app.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./pages/tender/create.tsx":
/*!*********************************!*\
  !*** ./pages/tender/create.tsx ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CreateTender)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"(pages-dir-node)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _hooks_useWeb3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../hooks/useWeb3 */ \"(pages-dir-node)/./hooks/useWeb3.ts\");\n/* harmony import */ var _components_PricePredictor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../components/PricePredictor */ \"(pages-dir-node)/./components/PricePredictor.tsx\");\n/* harmony import */ var _hooks_useTenderAPI__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../hooks/useTenderAPI */ \"(pages-dir-node)/./hooks/useTenderAPI.ts\");\n/* harmony import */ var _hooks_useContractTender__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../hooks/useContractTender */ \"(pages-dir-node)/./hooks/useContractTender.ts\");\n/* harmony import */ var _components_Navbar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../components/Navbar */ \"(pages-dir-node)/./components/Navbar.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_hooks_useWeb3__WEBPACK_IMPORTED_MODULE_3__, _hooks_useContractTender__WEBPACK_IMPORTED_MODULE_6__, _components_Navbar__WEBPACK_IMPORTED_MODULE_7__]);\n([_hooks_useWeb3__WEBPACK_IMPORTED_MODULE_3__, _hooks_useContractTender__WEBPACK_IMPORTED_MODULE_6__, _components_Navbar__WEBPACK_IMPORTED_MODULE_7__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\nfunction CreateTender() {\n    const [form, setForm] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        title: '',\n        description: '',\n        budget: '',\n        distance: '',\n        weight: '',\n        cargoType: 'general',\n        urgencyDays: '15',\n        expirationMinutes: '10',\n        deadline: ''\n    });\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { account, connectWallet, isConnecting, error: walletError } = (0,_hooks_useWeb3__WEBPACK_IMPORTED_MODULE_3__.useWeb3)();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const tenderAPI = (0,_hooks_useTenderAPI__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n    const contractTender = (0,_hooks_useContractTender__WEBPACK_IMPORTED_MODULE_6__[\"default\"])();\n    const [contractWarning, setContractWarning] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Check if contract is available\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CreateTender.useEffect\": ()=>{\n            console.log(\"Contract status:\", {\n                isAvailable: contractTender.isContractAvailable,\n                loading: contractTender.loading,\n                error: contractTender.error\n            });\n            if (!contractTender.isContractAvailable) {\n                setContractWarning('Смарт-контракт недоступен или не развернут. Тендер будет сохранен только в базе данных.');\n            } else {\n                setContractWarning(null);\n            }\n        }\n    }[\"CreateTender.useEffect\"], [\n        contractTender.isContractAvailable,\n        contractTender.loading,\n        contractTender.error\n    ]);\n    const calculateDeadline = ()=>{\n        const now = new Date();\n        now.setDate(now.getDate() + parseInt(form.urgencyDays || '15'));\n        return now.toISOString();\n    };\n    const handleCreate = async ()=>{\n        // 1. Check wallet connection\n        if (!account) {\n            const connected = await connectWallet();\n            if (!connected.success) {\n                alert(\"Пожалуйста, подключите кошелек MetaMask\");\n                return;\n            }\n        }\n        // 2. Validate form data\n        if (!form.distance || !form.weight) {\n            alert(\"Пожалуйста, заполните поля расстояния и веса\");\n            return;\n        }\n        setLoading(true);\n        let blockchainSuccess = false;\n        let blockchainError = null;\n        let tenderId = null;\n        try {\n            // Force contract reinitialization before proceeding\n            console.log(\"Forcing contract reinitialization before creating tender\");\n            const initResult = await contractTender.forceContractInitialization();\n            if (!initResult) {\n                throw new Error(\"Не удалось инициализировать смарт-контракт. Пожалуйста, убедитесь, что ваш кошелек подключен и вы находитесь в сети Sepolia.\");\n            }\n            if (!contractTender.isContractAvailable) {\n                throw new Error(\"Смарт-контракт недоступен. Пожалуйста, переподключите кошелек и попробуйте снова.\");\n            }\n            // 3. Save to blockchain\n            console.log(\"Saving tender to blockchain...\");\n            const title = form.title || `Перевозка груза (${form.weight} кг) на ${form.distance} км`;\n            const description = `Расстояние: ${form.distance} км, Вес: ${form.weight} кг, Тип груза: ${form.cargoType}, Срок доставки: ${form.urgencyDays} дней`;\n            // Create a Date object for the deadline\n            const deadline = new Date();\n            deadline.setDate(deadline.getDate() + parseInt(form.urgencyDays || '15'));\n            // Convert deadline to Unix timestamp (seconds since epoch) for blockchain\n            const deadlineTimestamp = Math.floor(deadline.getTime() / 1000);\n            const budget = form.budget ? parseFloat(form.budget) : 2000; // Значение по умолчанию\n            const expirationMinutes = parseInt(form.expirationMinutes || '10');\n            // Улучшенное логирование для отладки\n            console.log(\"Form data:\", {\n                title,\n                description,\n                budget,\n                deadlineTimestamp,\n                distance: form.distance,\n                weight: form.weight,\n                cargoType: form.cargoType,\n                urgencyDays: form.urgencyDays,\n                expirationMinutes\n            });\n            console.log(\"Sending to blockchain with deadline timestamp:\", deadlineTimestamp);\n            try {\n                const contractResponse = await contractTender.createTender(title, description, budget, deadlineTimestamp, parseInt(form.distance), parseInt(form.weight), form.cargoType, parseInt(form.urgencyDays), expirationMinutes);\n                console.log(\"Contract response:\", contractResponse);\n                if (contractResponse.success) {\n                    blockchainSuccess = true;\n                    tenderId = contractResponse.data?.id || null;\n                    if (tenderId && !tenderId.startsWith('fallback-id-')) {\n                        console.log(\"Tender created in blockchain with ID:\", tenderId);\n                    } else {\n                        console.warn(\"Tender was created but couldn't get proper ID from blockchain. Using fallback:\", tenderId);\n                        // Если ID не получен должным образом, запрашиваем текущее количество тендеров\n                        try {\n                            console.log(\"Attempting to get current tender count from contract\");\n                            // Здесь мы хотим получить актуальный ID созданного тендера\n                            const tenderCount = await contractTender.getTenderCount();\n                            console.log(\"Current tender count:\", tenderCount);\n                            if (tenderCount && parseInt(tenderCount) > 0) {\n                                // Скорее всего, последний ID будет tenderCount - 1\n                                const probableId = (parseInt(tenderCount) - 1).toString();\n                                console.log(\"Probable tender ID based on count:\", probableId);\n                                tenderId = probableId;\n                                blockchainSuccess = true;\n                            } else {\n                                blockchainSuccess = false;\n                                blockchainError = new Error(\"Не удалось получить ID тендера из блокчейна\");\n                            }\n                        } catch (countError) {\n                            console.error(\"Error getting tender count:\", countError);\n                            blockchainSuccess = false;\n                            blockchainError = new Error(\"Не удалось получить ID тендера из блокчейна\");\n                        }\n                    }\n                } else {\n                    blockchainError = new Error(contractResponse.error || \"Unknown blockchain error\");\n                    console.error(\"Blockchain error:\", contractResponse.error);\n                    throw blockchainError;\n                }\n            } catch (txError) {\n                console.error(\"Transaction error:\", txError);\n                blockchainError = new Error(`Transaction error: ${txError instanceof Error ? txError.message : \"Unknown error\"}`);\n                throw blockchainError;\n            }\n            // 4. Only if blockchain storage succeeds, also save metadata to database\n            if (blockchainSuccess) {\n                console.log(\"Tender successfully created in blockchain. Now saving metadata to database...\");\n                if (!account) {\n                    throw new Error(\"Кошелек не подключен\");\n                }\n                const tenderResponse = await tenderAPI.createTender({\n                    title,\n                    description,\n                    budget,\n                    deadline: deadline.toISOString(),\n                    walletAddress: account,\n                    categories: [\n                        form.cargoType\n                    ]\n                });\n                if (tenderResponse.error) {\n                    console.warn(`Warning: Database metadata storage failed: ${tenderResponse.error}`);\n                // Continue anyway since blockchain storage succeeded\n                }\n                // 5. Success message\n                console.log(\"Tender successfully created in blockchain\");\n                alert(\"Тендер успешно создан в блокчейне! Он будет доступен \" + expirationMinutes + \" минут.\\nID тендера: \" + tenderId);\n                router.push('/dashboard');\n            } else {\n                throw new Error(\"Не удалось сохранить тендер в блокчейне\");\n            }\n        } catch (error) {\n            console.error(\"Error creating tender:\", error);\n            alert(`Ошибка создания тендера: ${error instanceof Error ? error.message : 'Неизвестная ошибка'}`);\n        } finally{\n            setLoading(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"container mx-auto px-4 py-8\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Navbar__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                lineNumber: 208,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                className: \"text-2xl font-bold mb-6\",\n                children: \"Создать новый тендер\"\n            }, void 0, false, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                lineNumber: 209,\n                columnNumber: 7\n            }, this),\n            walletError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",\n                children: walletError\n            }, void 0, false, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                lineNumber: 212,\n                columnNumber: 9\n            }, this),\n            contractWarning && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded mb-4\",\n                children: contractWarning\n            }, void 0, false, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                lineNumber: 218,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-gray-100 border border-gray-400 text-gray-700 px-4 py-3 rounded mb-4 text-xs\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        className: \"font-bold\",\n                        children: \"Отладочная информация:\"\n                    }, void 0, false, {\n                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                        lineNumber: 225,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Адрес контракта: \",\n                            \"0x5FbDB2315678afecb367f032d93F642f64180aa3\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                        lineNumber: 226,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Кошелек подключен: \",\n                            account ? 'Да' : 'Нет'\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                        lineNumber: 227,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Адрес кошелька: \",\n                            account || 'Не подключен'\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                        lineNumber: 228,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Доступность контракта: \",\n                            contractTender.isContractAvailable ? 'Доступен' : 'Недоступен'\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                        lineNumber: 229,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Статус контракта: \",\n                            contractTender.contractStatus\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                        lineNumber: 230,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Ошибка контракта: \",\n                            contractTender.error || 'Нет'\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                        lineNumber: 231,\n                        columnNumber: 9\n                    }, this),\n                    contractTender.contractErrorDetails && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Детали ошибки: \",\n                            contractTender.contractErrorDetails\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                        lineNumber: 233,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-2 flex space-x-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>contractTender.forceContractInitialization(),\n                                className: \"text-xs px-2 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 focus:outline-none\",\n                                children: \"Переподключиться к контракту\"\n                            }, void 0, false, {\n                                fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                lineNumber: 236,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: async ()=>{\n                                    if (false) {} else {\n                                        alert('MetaMask не обнаружен');\n                                    }\n                                },\n                                className: \"text-xs px-2 py-1 bg-green-500 text-white rounded hover:bg-green-600 focus:outline-none\",\n                                children: \"Проверить сеть\"\n                            }, void 0, false, {\n                                fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                lineNumber: 243,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: async ()=>{\n                                    if (false) {} else {\n                                        alert('MetaMask не обнаружен');\n                                    }\n                                },\n                                className: \"text-xs px-2 py-1 bg-yellow-500 text-white rounded hover:bg-yellow-600 focus:outline-none\",\n                                children: \"Переключиться на Sepolia\"\n                            }, void 0, false, {\n                                fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                lineNumber: 264,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                        lineNumber: 235,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                lineNumber: 224,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-white rounded-lg shadow p-6 max-w-2xl mx-auto\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"grid grid-cols-1 gap-6\",\n                    children: [\n                        !account && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: connectWallet,\n                            disabled: isConnecting,\n                            className: \"w-full py-2 px-4 bg-blue-500 hover:bg-blue-600 text-white rounded-md disabled:bg-blue-300\",\n                            children: isConnecting ? \"Подключение...\" : \"Подключить MetaMask\"\n                        }, void 0, false, {\n                            fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                            lineNumber: 311,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    className: \"block text-sm font-medium text-gray-700\",\n                                    children: \"Название тендера\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                    lineNumber: 321,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"text\",\n                                    value: form.title,\n                                    onChange: (e)=>setForm({\n                                            ...form,\n                                            title: e.target.value\n                                        }),\n                                    placeholder: \"Например: Перевозка негабаритного груза\",\n                                    className: \"w-full p-2 border border-gray-300 rounded-md\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                    lineNumber: 322,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                            lineNumber: 320,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    className: \"block text-sm font-medium text-gray-700\",\n                                    children: \"Расстояние (км)\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                    lineNumber: 332,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"number\",\n                                    value: form.distance,\n                                    onChange: (e)=>setForm({\n                                            ...form,\n                                            distance: e.target.value\n                                        }),\n                                    min: \"50\",\n                                    max: \"2000\",\n                                    className: \"w-full p-2 border border-gray-300 rounded-md\",\n                                    required: true\n                                }, void 0, false, {\n                                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                    lineNumber: 333,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                            lineNumber: 331,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    className: \"block text-sm font-medium text-gray-700\",\n                                    children: \"Вес груза (кг)\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                    lineNumber: 345,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"number\",\n                                    value: form.weight,\n                                    onChange: (e)=>setForm({\n                                            ...form,\n                                            weight: e.target.value\n                                        }),\n                                    min: \"100\",\n                                    max: \"10000\",\n                                    className: \"w-full p-2 border border-gray-300 rounded-md\",\n                                    required: true\n                                }, void 0, false, {\n                                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                    lineNumber: 346,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                            lineNumber: 344,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    className: \"block text-sm font-medium text-gray-700\",\n                                    children: \"Тип груза\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                    lineNumber: 358,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                    value: form.cargoType,\n                                    onChange: (e)=>setForm({\n                                            ...form,\n                                            cargoType: e.target.value\n                                        }),\n                                    className: \"w-full p-2 border border-gray-300 rounded-md\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                            value: \"general\",\n                                            children: \"Обычный\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                            lineNumber: 364,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                            value: \"fragile\",\n                                            children: \"Хрупкий\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                            lineNumber: 365,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                            value: \"perishable\",\n                                            children: \"Скоропортящийся\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                            lineNumber: 366,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                    lineNumber: 359,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                            lineNumber: 357,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    className: \"block text-sm font-medium text-gray-700\",\n                                    children: \"Срок доставки (дни)\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                    lineNumber: 371,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"number\",\n                                    value: form.urgencyDays,\n                                    onChange: (e)=>setForm({\n                                            ...form,\n                                            urgencyDays: e.target.value\n                                        }),\n                                    min: \"1\",\n                                    max: \"30\",\n                                    className: \"w-full p-2 border border-gray-300 rounded-md\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                    lineNumber: 372,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                            lineNumber: 370,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    className: \"block text-sm font-medium text-gray-700\",\n                                    children: \"Бюджет (USD)\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                    lineNumber: 383,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"number\",\n                                    value: form.budget,\n                                    onChange: (e)=>setForm({\n                                            ...form,\n                                            budget: e.target.value\n                                        }),\n                                    min: \"1\",\n                                    placeholder: \"Укажите максимальный бюджет\",\n                                    className: \"w-full p-2 border border-gray-300 rounded-md\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                    lineNumber: 384,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                            lineNumber: 382,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    className: \"block text-sm font-medium text-gray-700\",\n                                    children: \"Время активности тендера (минуты)\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                    lineNumber: 395,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                            type: \"number\",\n                                            value: form.expirationMinutes,\n                                            onChange: (e)=>setForm({\n                                                    ...form,\n                                                    expirationMinutes: e.target.value\n                                                }),\n                                            min: \"1\",\n                                            max: \"1440\",\n                                            className: \"w-full p-2 border border-gray-300 rounded-md\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                            lineNumber: 397,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"ml-2 text-sm text-gray-500\",\n                                            children: \"Тендер будет активен указанное количество минут\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                            lineNumber: 405,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                                    lineNumber: 396,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                            lineNumber: 394,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_PricePredictor__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            distance: form.distance,\n                            weight: form.weight,\n                            cargoType: form.cargoType,\n                            urgencyDays: form.urgencyDays\n                        }, void 0, false, {\n                            fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                            lineNumber: 411,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: handleCreate,\n                            disabled: loading || !account,\n                            className: \"w-full py-2 px-4 bg-blue-500 hover:bg-blue-600 text-white rounded-md disabled:bg-blue-300\",\n                            children: loading ? \"Создание...\" : \"Создать тендер\"\n                        }, void 0, false, {\n                            fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                            lineNumber: 418,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                    lineNumber: 309,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n                lineNumber: 308,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/aldiyarbolegenov/tender/frontend/pages/tender/create.tsx\",\n        lineNumber: 207,\n        columnNumber: 5\n    }, this);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./pages/tender/create.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "ethers":
/*!*************************!*\
  !*** external "ethers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = import("ethers");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/pages.runtime.dev.js":
/*!**********************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages.runtime.dev.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-dom":
/*!****************************!*\
  !*** external "react-dom" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-dom");

/***/ }),

/***/ "react-hot-toast":
/*!**********************************!*\
  !*** external "react-hot-toast" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = import("react-hot-toast");;

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc"], () => (__webpack_exec__("(pages-dir-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2Ftender%2Fcreate&preferredRegion=&absolutePagePath=.%2Fpages%2Ftender%2Fcreate.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();